/*
 * ----------------------------------------------------------------------------
 *  This file is automatically generated using TTworkbench Language Support ASN.1 Parser
 *  PLEASE DO NOT EDIT! The file will be overwritten when the input file changes.
 *
 *  Source:    EfcAutonomousContextData.asn
 *  Generator: TTworkbench ASN.1 Parser 1.1.13.201605251730
 *  Date:      15/06/16 10:57
 *
 * ----------------------------------------------------------------------------
 *  The ASN.1 to TTCN-3 is a proprietary mapping based on the ES 201 873-7 ETSI standard.
 *  Details about the used mapping can be found in the TTworkbench documentation.
 *
 *  TTworkbench is a product of Testing Technologies.
 *  http://www.testingtech.com
 *
 *  TESTING TECHNOLOGIES DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
 *  SOFTWARE. IN NO EVENT SHALL TESTING TECHNOLOGIES BE LIABLE FOR ANY
 *  SPECIAL, DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 *  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 *  AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
 *  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
 *  THIS SOFTWARE.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 *  EITHER EXPRESSED OR IMPLIED, INCLUDING ANY KIND OF IMPLIED OR
 *  EXPRESSED WARRANTY OF NON-INFRINGEMENT OR THE IMPLIED WARRANTIES
 *  OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 *  (C) Copyright Testing Technologies, 2000-2016. All Rights Reserved.
 * ----------------------------------------------------------------------------
 */

module EfcAutonomousContextData language "ASN.1:1997" {
  import from ASNAUX all; 

  import from EfcDsrcApplication language "ASN.1:1997" {
    type TrailerAxles, EquipmentOBUId, PayUnit, CopValue, VehicleWeightLaden, VehicleClass, PaymentMeans, Provider, TractorAxles, EuroValue, PaymentFee, UnitType, DateCompact; 
  }; 

  import from AVIAEINumberingAndDataStructures language "ASN.1:1997" {
    type CS5, IssuerIdentifier, CountryCode; 
  }; 

  import from EfcDsrcGeneric language "ASN.1:1997" {
    type AttributeIdList; 
  }; 

  import from EfcCcc language "ASN.1:1997" {
    type Latitude, Longitude; 
  }; 

  import from EfcAutonomousCharging language "ASN.1:1997" {
    type VersionId, MessageAuthenticator, Duration, Distance; 
  }; 

  type record AuthenticatedIso17575_3Adu {
    bitstring iso17575_3AduPer,
    EfcAutonomousCharging.MessageAuthenticator messageAuthenticator
  }

  type record Iso17575_3AduHeader {
    AidIdentifier protocolVersion,
    EfcDsrcApplication.Provider informationSender,
    EfcDsrcApplication.Provider informationOriginator,
    EfcDsrcApplication.Provider tollContext,
    Int4 aduSequenceNumber,
    ASNAUX.GeneralizedTime messageDate
  }

  type record TollContextOverview {
    EfcDsrcApplication.Provider tollContext,
    _0TollContextOverview tollContextPartitions,
    ASNAUX.UTF8String tollSchemeName optional,
    _0TollContextOverview0 tollContextBoundingBoxes optional,
    VersionAndValidity tollContextOverviewVersion
  }

  type record of SphericalBox _0TollContextOverview0; 

  type record of TollContextPartitionId _0TollContextOverview; 

  type record TollContextPartitionOverview {
    TollContextPartitionId tollContextPartitionId,
    ASNAUX.UTF8String tollContextPartitionName optional,
    TollSchemeType tollContextPartitionType,
    OperationalStatus operationalStatus,
    _0TollContextPartitionOverview timeZone,
    _0TollContextPartitionOverview0 dstOffset optional,
    Polygon tollContextPartitionBoundingPolygon optional,
    boolean sendChargeReportIfEntering optional,
    Int1 precedenceLevel optional,
    EfcDsrcApplication.Provider chargeReportFinalRecipient optional,
    VersionAndValidity tollContextPartitionOverviewVersion
  }

  type integer _0TollContextPartitionOverview (-720 .. 720); 

  type integer _0TollContextPartitionOverview0 (-120 .. 120); 

  type record TariffTable {
    _0TariffTable applicablePartitions,
    _0TariffTable0 tariffs,
    EfcDsrcApplication.PayUnit standardCurrency,
    TypeOfFee typeOfFee optional,
    VersionAndValidity tariffTableVersion
  }

  type record of TollContextPartitionId _0TariffTable; 

  type record of Tariff _0TariffTable0; 

  type record CurrencyConversionTable {
    _0CurrencyConversionTable conversions,
    VersionAndValidity currencyConversionTableVersion
  }

  type record of _0_0CurrencyConversionTable _0CurrencyConversionTable; 

  type record _0_0CurrencyConversionTable {
    Currency alternativeCurrency,
    Int4 conversionRate
  }

  type record TariffClassDefinition {
    _0TariffClassDefinition tariffClasses,
    VersionAndValidity tariffClassDefinitionVersion
  }

  type record of TariffClass _0TariffClassDefinition; 

  type record LocalVehicleClassDefinition {
    _0LocalVehicleClassDefinition localVehicleClasses,
    VersionAndValidity localVehicleClassVersion optional
  }

  type record of LocalVehicleClass _0LocalVehicleClassDefinition; 

  type record TimeClassDefinition {
    _0TimeClassDefinition timeClasses,
    VersionAndValidity timeClassDefinitionVersion optional
  }

  type record of TimeClass _0TimeClassDefinition; 

  type record UserClassDefinition {
    _0UserClassDefinition userClasses,
    VersionAndValidity userClassDefinitionVersion optional
  }

  type record of UserClass _0UserClassDefinition; 

  type record TollContextPartitionLayout {
    TollContextPartitionId tollContextPartitionId,
    Layout layoutDescription,
    Point geoRefPoint optional,
    VersionAndValidity tollContextPartitionVersion
  }

  type record ChargeReportingEvents {
    _0ChargeReportingEvents applicablePartitions,
    _0ChargeReportingEvents0 absoluteTimeEvents optional,
    RelativeTimeEvent relativeTimeEvents optional,
    EfcAutonomousCharging.Distance travelledDistanceEvents optional,
    _0ChargeReportingEvents1 locationEvents optional,
    FeeLimit feeLimitEvents optional,
    VersionAndValidity chargeReportingEventsVersion
  }

  type record of AbsoluteTimeEvent _0ChargeReportingEvents0; 

  type record of LocationEvent _0ChargeReportingEvents1; 

  type record of TollContextPartitionId _0ChargeReportingEvents; 

  type record ChargeReportConfiguration {
    _0ChargeReportConfiguration applicablePartitions,
    ChargeReportContent chargeReportContent,
    UsageStatementContent usageStatementContent,
    CccAttributesContent cccAttributesContent optional,
    AggregatedSingleTariffClassSessionContent aggregatedSingleTariffClassSessionContent optional,
    DetectedChargeObjectContent detectedChargeObjectContent optional,
    ListOfRawUsageDataContent listOfRawUsageDataContent optional,
    ListOfDsrcUsageDataContent listOfDsrcUsageDateContent optional,
    AggregatedFeeContent aggregatedFeeContent optional,
    MeasuredRawDataContent measuredRawDataContent optional,
    NmeaDataContent nmeaDataContent optional,
    VersionAndValidity chargeReportConfigurationVersion
  }

  type record of TollContextPartitionId _0ChargeReportConfiguration; 

  type record AbsolutePointCoordinates {
    EfcCcc.Longitude longitude,
    EfcCcc.Latitude latitude,
    Int2Signed altitude optional
  }

  type record AbsoluteTimeEvent {
    Time timesDuringDay,
    Int3 randomDelay optional
  }

  type Int1 ActualNumberOfPassengers; 

  type record AggregatedFeeContent {
    boolean sumVat
  }

  type record AggregatedSingleTariffClassSessionContent {
    boolean timePeriodCovered,
    boolean currentTariffClass,
    TariffClassDescriptionContent tariffClassDescriptionContent optional,
    boolean vehicleDescription,
    VehicleDescriptionContent vehicleDescriptionContent optional,
    boolean totalDistanceCovered,
    boolean numberOfDetectedEvents,
    boolean obeStatus,
    boolean feeExclVat,
    boolean sumVat
  }

  type integer AidIdentifier (0 .. 255); 

  const AidIdentifier AidIdentifier_iso17575_3_2016_ := 1; 

  const AidIdentifier AidIdentifier_iso17575_3_2010_ := 0; 

  type Int1 AreaId; 

  type record AreaLayout {
    AreaId areaId,
    Polygon areaBorder,
    LocationClassId locationClass optional,
    _0AreaLayout applicableTimeClasses optional,
    _0AreaLayout0 roadNetworks optional
  }

  type record of TimeClassId _0AreaLayout; 

  type record of RoadNetwork _0AreaLayout0; 

  type record CccAttributesContent {
    boolean timeOfCCCRecord,
    boolean axlesHistory,
    boolean commStatus,
    boolean gnssStatus,
    boolean distRecStatus,
    boolean activeContexts,
    boolean obeHistory
  }

  type union ChargeDistance {
    EfcAutonomousCharging.Distance predefinedDistance,
    _0ChargeDistance entryDependingDistance
  }

  type record _0ChargeDistance {
    _0_0ChargeDistance entryDependingDistance,
    EfcAutonomousCharging.Distance missingEntryInformation
  }

  type record of EntryDependingDistanceData _0_0ChargeDistance; 

  type Int4 ChargeObjectDesignation; 

  type record ChargeObjectIdContent {
    boolean chargeReportFinalRecipient
  }

  type record ChargeReportContent {
    boolean useOfCrAuthentication,
    boolean obeId,
    boolean vehicleLPNr,
    boolean paymentMeans,
    boolean tollContext,
    boolean chargeReportFinalRecipient,
    boolean timeOfReport,
    boolean reportPeriod,
    boolean versionInfo,
    boolean sumVatForThisSession,
    boolean accountStatus,
    boolean chargeReportCounter,
    boolean mileage,
    boolean listOfCCCAttributes
  }

  type union ChargeUnit {
    EfcAutonomousCharging.Distance distance,
    EfcAutonomousCharging.Duration time,
    Int1 event
  }

  type Int2 CO2EmissionValue; 

  type record CO2EmissionValueRange {
    CO2EmissionValue lowerLimit,
    CO2EmissionValue upperLimit
  }

  type Int2 ContextId; 

  type record ContractTypes {
    EfcDsrcApplication.Provider contractProvider,
    _0ContractTypes typeOfContract
  }

  type octetstring _0ContractTypes length (2); 

  type record CopValueRange {
    EfcDsrcApplication.CopValue lowerLimit,
    EfcDsrcApplication.CopValue upperLimit
  }

  type record CordonBorderSegment {
    CordonSegmentId cordonSegmentId,
    Point startPoint,
    CordonEntryLocation cordonEntryLocation optional,
    CordonExitLocation cordonExitLocation optional
  }

  type record CordonEntryLocation {
    ChargeObjectDesignation entryLocationId,
    LocationClassId entryLocationClass,
    _0CordonEntryLocation applicableTimeClasses optional
  }

  type record of TimeClassId _0CordonEntryLocation; 

  type record CordonExitLocation {
    ChargeObjectDesignation exitLocationId,
    _0CordonExitLocation exitLocationClass,
    _0CordonExitLocation0 applicableTimeClasses optional
  }

  type record of _0_0CordonExitLocation _0CordonExitLocation; 

  type record _0_0CordonExitLocation {
    LocationClassId locationClass,
    _0_0_0CordonExitLocation entryLocation optional
  }

  type record of EntryLocationId _0_0_0CordonExitLocation; 

  type record of TimeClassId _0CordonExitLocation0; 

  type Int1 CordonId; 

  type record CordonLayout {
    CordonId cordonId,
    _0CordonLayout cordonBorderPolygon
  }

  type record of CordonBorderSegment _0CordonLayout; 

  type Int4 CordonSegmentId; 

  type integer Currency (1 .. 999); 

  type record DetectedChargeObjectContent {
    ChargeObjectIdContent chargeObjectIdContent,
    boolean subObjectNumber,
    boolean timeWhenUsed,
    boolean mileageWhenUsed,
    boolean currentTariffClass,
    TariffClassDescriptionContent tariffClassDescriptionContent optional,
    boolean vehicleDescription,
    VehicleDescriptionContent vehicleDescriptionContent optional,
    boolean obeStatus,
    boolean feeExclVat,
    boolean sumVat,
    boolean chargeObjDetectionMode
  }

  type record DieselEmissionValueRange {
    _0DieselEmissionValueRange particulate optional,
    _0DieselEmissionValueRange0 absorptionCoeffRange
  }

  type record _0DieselEmissionValueRange {
    EfcDsrcApplication.UnitType unitType,
    _0_0DieselEmissionValueRange valueRange
  }

  type record _0_0DieselEmissionValueRange {
    _0_0_0DieselEmissionValueRange lowerLimit,
    _0_0_0DieselEmissionValueRange0 upperLimit
  }

  type integer _0_0_0DieselEmissionValueRange0 (0 .. 32767); 

  type integer _0_0_0DieselEmissionValueRange (0 .. 32767); 

  type record _0DieselEmissionValueRange0 {
    Int2 lowerLimit,
    Int2 upperLimit
  }

  type record EfcLayer {
    integer efcLayerId,
    ASNAUX.UTF8String tollContextName optional,
    _0EfcLayer chargeObjects,
    GdfSource referencedGdfSource,
    VersionAndValidity efcLayerVersion
  }

  type record of GdfChargeObject _0EfcLayer; 

  type record EfcNodeId {
    integer efcContextSpecificId,
    ASNAUX.UTF8String sectionName optional,
    GdfReference gdfSpecificId optional
  }

  type EfcDsrcApplication.Provider EntityId; 

  type record EntryDependingDistanceData {
    ChargeObjectDesignation chargeObjectAtEntry,
    EfcAutonomousCharging.Distance definedDistance
  }

  type Int4 EntryLocationId; 

  type record EuroValueRange {
    EfcDsrcApplication.EuroValue lowerLimit,
    EfcDsrcApplication.EuroValue upperLimit
  }

  type record ExhaustEmissionValueRange {
    EfcDsrcApplication.UnitType unitType,
    _0ExhaustEmissionValueRange emissionCORange optional,
    _0ExhaustEmissionValueRange0 emissionHCRange optional,
    _0ExhaustEmissionValueRange1 emissionNOXRange optional,
    _0ExhaustEmissionValueRange2 emissionHCNOXRange optional
  }

  type record _0ExhaustEmissionValueRange {
    _0_0ExhaustEmissionValueRange lowerLimit,
    _0_0ExhaustEmissionValueRange0 upperLimit
  }

  type integer _0_0ExhaustEmissionValueRange (0 .. 32767); 

  type integer _0_0ExhaustEmissionValueRange0 (0 .. 32767); 

  type record _0ExhaustEmissionValueRange2 {
    Int2 lowerLimit,
    Int2 upperLimit
  }

  type record _0ExhaustEmissionValueRange0 {
    Int2 lowerLimit,
    Int2 upperLimit
  }

  type record _0ExhaustEmissionValueRange1 {
    Int2 lowerLimit,
    Int2 upperLimit
  }

  type EfcDsrcApplication.PaymentFee FeeLimit; 

  type record GdfChargeObject {
    ChargeObjectDesignation chargeObjectDesignation,
    EfcDsrcApplication.Provider roadOperatorId optional,
    integer applicableLocationClass optional,
    _0GdfChargeObject applicableTimeClasses optional,
    EfcAutonomousCharging.Distance tollRelevantLength,
    EfcAutonomousCharging.Distance equivalentMeasuredLength optional,
    TollRoad tollRoad,
    _0GdfChargeObject0 liabilityRules
  }

  type record of TimeClassId _0GdfChargeObject; 

  type union _0GdfChargeObject0 {
    GdfReference tollPoint,
    _0_0GdfChargeObject0 minTollPath,
    _0_0GdfChargeObject00 minimumUsage
  }

  type record _0_0GdfChargeObject0 {
    GdfReference firstPoint,
    GdfReference secondPoint
  }

  type integer _0_0GdfChargeObject00 (1 .. 1000); 

  type record GdfReference {
    integer datasetId,
    integer layerId,
    integer sectionId,
    integer objectId
  }

  type record GdfSource {
    ASNAUX.UTF8String dataProvider,
    integer typeId,
    integer versionNumberId
  }

  type integer Int1 (0 .. 255); 

  type integer Int2 (0 .. 65535); 

  type integer Int2Signed (-32768 .. 32767); 

  type integer Int3 (0 .. 16777215); 

  type integer Int4 (0 .. 4294967295); 

  type record IntervalScaleParameter {
    _0IntervalScaleParameter vehicleMaxLadenWeightIntervals optional,
    _0IntervalScaleParameter0 vehicleLengthOverallIntervals optional
  }

  type record _0IntervalScaleParameter0 {
    Int2Signed zeroOffset,
    VehicleLengthOverall resolution,
    VehicleLengthOverall max
  }

  type record _0IntervalScaleParameter {
    Int2Signed zeroOffset,
    VehicleMaxLadenWeight resolution,
    VehicleMaxLadenWeight max
  }

  type union Layout {
    _0Layout sectionPricingLayout,
    _0Layout0 areaPricingLayout,
    _0Layout1 cordonPricingLayout
  }

  type union _0Layout {
    _0_0Layout sectionLayoutDescription,
    SectionLayoutGdf sectionLayoutDescriptionGdf
  }

  type record of SectionLayout _0_0Layout; 

  type record of CordonLayout _0Layout1; 

  type record of AreaLayout _0Layout0; 

  type union LiabilityRules {
    _0LiabilityRules tollPoints,
    Link minTollPath,
    _0LiabilityRules0 minimumUsage
  }

  type record length (1 .. 2) of Point _0LiabilityRules; 

  type integer _0LiabilityRules0 (0 .. 1000); 

  type record Line {
    Point point1,
    Point point2
  }

  type record Link {
    LinkId linkId,
    Point startPoint,
    Point endPoint,
    _0Link intermediatePoints optional
  }

  type record of Point _0Link; 

  type Int4 LinkId; 

  type record ListOfDsrcUsageDataContent {
    boolean data14906,
    boolean data12813,
    boolean data13141
  }

  type record ListOfRawUsageDataContent {
    boolean currentTariffClass,
    TariffClassDescriptionContent tariffClassDescriptionContent optional,
    boolean vehicleDescription,
    VehicleDescriptionContent vehicleDescriptionContent optional
  }

  type record LocalVehicleClass {
    LocalVehicleClassId localVehicleClassId,
    NominalVehicleParameters nominalElements,
    OrdinalVehicleParameters ordinalElements optional,
    Int1 priorityValue optional
  }

  type Int2 LocalVehicleClassId; 

  type Int4 LocationClassId; 

  type record LocationEvent {
    ChargeObjectDesignation chargeObject optional,
    _0LocationEvent line optional,
    _0LocationEvent0 area optional
  }

  type record _0LocationEvent0 {
    Polygon areaDescription,
    boolean atEntry,
    boolean atExit
  }

  type record _0LocationEvent {
    Line lineDescription,
    boolean crossingDirection1,
    boolean crossingDirection2
  }

  type record MaxFee {
    Int4 perDay optional,
    Int4 perWeek optional,
    Int4 perMonth optional,
    Int4 perYear optional
  }

  type record MeasuredRawDataContent {
    boolean measuredPosition,
    boolean timeWhenMeasured,
    boolean nMEAData,
    boolean additionalGNSSData
  }

  type record NmeaDataContent {
    boolean time,
    boolean status,
    boolean latitude,
    boolean latNS,
    boolean longitude,
    boolean longEW,
    boolean speed,
    boolean heading,
    boolean date,
    boolean signalIntegrity,
    boolean altitude,
    boolean usedSatellites,
    boolean hdop
  }

  type record NominalTimeParameters {
    _0NominalTimeParameters weekdays optional,
    _0NominalTimeParameters0 dates optional,
    _0NominalTimeParameters1 classesSetExternally optional
  }

  type record of Weekday _0NominalTimeParameters; 

  type record of _0_0NominalTimeParameters1 _0NominalTimeParameters1; 

  type integer _0_0NominalTimeParameters1 (0 .. 255); 

  const _0_0NominalTimeParameters1 NominalTimeParameters_classesSetExternally__COMP_reserved_ := 0; 

  const _0_0NominalTimeParameters1 NominalTimeParameters_classesSetExternally__COMP_congestionChargeLevel2_ := 2; 

  const _0_0NominalTimeParameters1 NominalTimeParameters_classesSetExternally__COMP_congestionChargeLevel1_ := 1; 

  type record of EfcDsrcApplication.DateCompact _0NominalTimeParameters0; 

  type record NominalVehicleParameters {
    _0NominalVehicleParameters vehicleClasses,
    _0NominalVehicleParameters0 vehicleTrainAxlesNumbers optional,
    _0NominalVehicleParameters1 euroValues optional,
    _0NominalVehicleParameters2 copValues optional
  }

  type record of EfcDsrcApplication.VehicleClass _0NominalVehicleParameters; 

  type record of _0_0NominalVehicleParameters0 _0NominalVehicleParameters0; 

  type integer _0_0NominalVehicleParameters0 (0 .. 15); 

  type record of EfcDsrcApplication.CopValue _0NominalVehicleParameters2; 

  type record of EfcDsrcApplication.EuroValue _0NominalVehicleParameters1; 

  type record OperationalStatus {
    ASNAUX.GeneralizedTime startsOperationAt,
    ASNAUX.GeneralizedTime stopsOperationAt optional
  }

  type record OrdinalTimeParameters {
    _0OrdinalTimeParameters weekdays optional,
    _0OrdinalTimeParameters0 absoluteTimeOfDay optional,
    _0OrdinalTimeParameters1 relativeTimePeriods optional,
    _0OrdinalTimeParameters2 periodsInYear optional
  }

  type record of _0_0OrdinalTimeParameters _0OrdinalTimeParameters; 

  type record _0_0OrdinalTimeParameters {
    Weekday startDay,
    Weekday endDay
  }

  type record of _0_0OrdinalTimeParameters2 _0OrdinalTimeParameters2; 

  type record _0_0OrdinalTimeParameters2 {
    EfcDsrcApplication.DateCompact startDay,
    EfcDsrcApplication.DateCompact endDay
  }

  type record of _0_0OrdinalTimeParameters1 _0OrdinalTimeParameters1; 

  type record _0_0OrdinalTimeParameters1 {
    Int2 minPeriod optional,
    Int2 maxPeriod optional
  }

  type record of _0_0OrdinalTimeParameters0 _0OrdinalTimeParameters0; 

  type record _0_0OrdinalTimeParameters0 {
    Time startTime,
    Time endTime
  }

  type record OrdinalVehicleParameters {
    _0OrdinalVehicleParameters vehicleLengthOverall optional,
    _0OrdinalVehicleParameters0 vehicleHeightOverall optional,
    _0OrdinalVehicleParameters1 vehicleWidthOverall optional,
    _0OrdinalVehicleParameters2 vehicleFirstAxleHeight optional,
    _0OrdinalVehicleParameters3 vehicleTractorAxlesNumber optional,
    _0OrdinalVehicleParameters4 vehicleTrailerAxlesNumber optional,
    _0OrdinalVehicleParameters5 vehicleMaxLadenWeight optional,
    _0OrdinalVehicleParameters6 vehicleTrainMaximumWeight optional,
    _0OrdinalVehicleParameters7 vehicleWeightUnladen optional,
    _0OrdinalVehicleParameters8 vehicleWeightLaden optional,
    _0OrdinalVehicleParameters9 euroValue optional,
    _0OrdinalVehicleParameters10 copValue optional,
    _0OrdinalVehicleParameters11 vehicleClass optional,
    _0OrdinalVehicleParameters12 co2EmissionValue optional,
    _0OrdinalVehicleParameters13 dieselEmissionValue optional,
    _0OrdinalVehicleParameters14 exhaustEmissionValue optional
  }

  type record of CopValueRange _0OrdinalVehicleParameters10; 

  type record of CO2EmissionValueRange _0OrdinalVehicleParameters12; 

  type record of VehicleClassRange _0OrdinalVehicleParameters11; 

  type record of EuroValueRange _0OrdinalVehicleParameters9; 

  type record of VehicleWeightLadenRange _0OrdinalVehicleParameters8; 

  type record of VehicleWeightUnladenRange _0OrdinalVehicleParameters7; 

  type record of VehicleTrainMaximumWeightRange _0OrdinalVehicleParameters6; 

  type record of VehicleLengthOverallRange _0OrdinalVehicleParameters; 

  type record of ExhaustEmissionValueRange _0OrdinalVehicleParameters14; 

  type record of DieselEmissionValueRange _0OrdinalVehicleParameters13; 

  type record of VehicleMaxLadenWeightRange _0OrdinalVehicleParameters5; 

  type record of VehicleTrailerAxlesNumberRange _0OrdinalVehicleParameters4; 

  type record of VehicleTractorAxlesNumberRange _0OrdinalVehicleParameters3; 

  type record of VehicleFirstAxleHeightRange _0OrdinalVehicleParameters2; 

  type record of VehicleWidthOverallRange _0OrdinalVehicleParameters1; 

  type record of VehicleHeightOverallRange _0OrdinalVehicleParameters0; 

  type union Point {
    PointId pointIdentifier,
    AbsolutePointCoordinates absolutePointCoordinates,
    RelativePointCoordinates relativePointCoordinates
  }

  type Int4 PointId; 

  type record PointIdDefinition {
    PointId pointId,
    AbsolutePointCoordinates pointCoordinates
  }

  type record of Point Polygon; 

  type record RelativePointCoordinates {
    Int2Signed longitude,
    Int2Signed latitude,
    Int2Signed altitude optional
  }

  type record RelativeTimeEvent {
    Int3 timeDuration,
    Int3 randomDelay optional
  }

  type record RoadElementsTowardChargePoint {
    GdfReference junctionIdFrom,
    GdfReference gdfRoadElement
  }

  type record RoadNetwork {
    Int1 networkId,
    LocationClassId locationClass,
    _0RoadNetwork roadNetworkObjects
  }

  type record of RoadNetworkObject _0RoadNetwork; 

  type record RoadNetworkObject {
    ChargeObjectDesignation chargeObjectId,
    ASNAUX.UTF8String chargeObjectName optional,
    Point chargeObjectRefPoint optional,
    _0RoadNetworkObject networkPoints optional,
    Link tollPath,
    _0RoadNetworkObject0 supportingInformation optional,
    _0RoadNetworkObject1 applicableTimeClasses optional
  }

  type record of Point _0RoadNetworkObject; 

  type record of TimeClassId _0RoadNetworkObject1; 

  type record of SupportingPoint _0RoadNetworkObject0; 

  type integer RoundingRule (0 .. 255); 

  const RoundingRule RoundingRule_up_ := 1; 

  const RoundingRule RoundingRule_accounting_ := 3; 

  const RoundingRule RoundingRule_down_ := 2; 

  const RoundingRule RoundingRule_no_ := 0; 

  type record SectionLayout {
    ChargeObjectDesignation chargeObjectId,
    ASNAUX.UTF8String chargeObjectName optional,
    Point chargeObjectRefPoint optional,
    _0SectionLayout networkPoints optional,
    Link tollPath,
    LiabilityRules liabilityRules,
    _0SectionLayout0 pathStructureTowards optional,
    _0SectionLayout1 pathStructureOnwards optional,
    _0SectionLayout2 supportingInformation optional,
    ChargeDistance chargeDistance,
    EfcAutonomousCharging.Distance realDistance optional,
    _0SectionLayout3 applicableTimeClasses optional,
    LocationClassId locationClass,
    boolean storageRequired optional,
    SupplementaryInvoicingData invoicingRelatedData optional
  }

  type record of PointIdDefinition _0SectionLayout; 

  type record of SupportingPoint _0SectionLayout2; 

  type record of TimeClassId _0SectionLayout3; 

  type record of Link _0SectionLayout0; 

  type record of Link _0SectionLayout1; 

  type record SectionLayoutGdf {
    EfcLayer efcLayer
  }

  type record SphericalBox {
    EfcCcc.Latitude southernLatitude,
    EfcCcc.Latitude northernLatitude,
    EfcCcc.Longitude westernLongitude,
    EfcCcc.Longitude easternLongitude
  }

  type record SupplementaryInvoicingData {
    ASNAUX.UTF8String countryCode optional,
    ASNAUX.UTF8String description optional,
    ASNAUX.UTF8String networkName optional,
    ASNAUX.UTF8String roadNumber optional,
    integer sectionNumber optional,
    ASNAUX.UTF8String directionCode optional,
    ASNAUX.UTF8String directionDescription optional,
    ASNAUX.UTF8String laneNumber optional,
    TypeOfSection typeOfSection optional
  }

  type record SupportingPoint {
    Point supportPoint,
    EfcAutonomousCharging.Distance distanceToNextRoad optional
  }

  type record Tariff {
    TariffClassId tariffClass,
    ChargeUnit chargeUnit,
    RoundingRule roundingRuleForChargeUnitsUsed,
    Int4 basicFeePerChargeUnit,
    RoundingRule roundingRuleForFee,
    Int4 vat optional,
    RoundingRule roundingRuleForVat optional,
    _0Tariff intervalScaleParameters optional,
    Int4 offsetFee optional,
    Int4 minFee optional,
    Int4 thresholdFee optional,
    MaxFee maxFee optional,
    Currency alternativeCurrency optional
  }

  type record of IntervalScaleParameter _0Tariff; 

  type record TariffClass {
    TariffClassId tariffClassId,
    _0TariffClass localVehicleClasses,
    _0TariffClass0 timeClasses optional,
    _0TariffClass1 locationClasses optional,
    _0TariffClass2 userClasses optional
  }

  type record of LocationClassId _0TariffClass1; 

  type record of UserClassId _0TariffClass2; 

  type record of TimeClassId _0TariffClass0; 

  type record of LocalVehicleClassId _0TariffClass; 

  type record TariffClassDescriptionContent {
    boolean tariffClassId,
    boolean localVehicleClasses,
    boolean timeClasses,
    boolean locationClasses,
    boolean userClasses
  }

  type Int4 TariffClassId; 

  type record Time {
    _0Time hours,
    _0Time0 mins,
    _0Time1 secs
  }

  type integer _0Time (0 .. 23); 

  type integer _0Time1 (0 .. 59); 

  type integer _0Time0 (0 .. 59); 

  type record TimeClass {
    TimeClassId timeClassId,
    NominalTimeParameters nominalElements optional,
    _0TimeClass ordinalElements optional,
    Int1 priorityValue optional
  }

  type record of OrdinalTimeParameters _0TimeClass; 

  type Int2 TimeClassId; 

  type Int1 TollContextPartitionId; 

  type record TollRoad {
    EfcNodeId efcNodeFrom,
    _0TollRoad efcLink,
    EfcNodeId efcNnodeTo
  }

  type record _0TollRoad {
    _0_0TollRoad roadElementsTowardChargePoint,
    GdfReference junctionIdTo
  }

  type record of RoadElementsTowardChargePoint _0_0TollRoad; 

  type integer TollSchemeType (0 .. 255); 

  const TollSchemeType TollSchemeType_roadSectionPricing_ := 0; 

  const TollSchemeType TollSchemeType_cordonPricing_ := 3; 

  const TollSchemeType TollSchemeType_areaPricingTime_ := 2; 

  const TollSchemeType TollSchemeType_areaPricingDistance_ := 1; 

  type integer TypeOfFee (0 .. 255); 

  const TypeOfFee TypeOfFee_fee_ := 1; 

  const TypeOfFee TypeOfFee_custom_ := 3; 

  const TypeOfFee TypeOfFee_tax_ := 2; 

  const TypeOfFee TypeOfFee_reserved_ := 0; 

  type integer TypeOfSection (0 .. 255); 

  const TypeOfSection TypeOfSection_manual_ := 1; 

  const TypeOfSection TypeOfSection_openRoadTolling_ := 5; 

  const TypeOfSection TypeOfSection_distanceBasedFreeFlowVirtual_ := 7; 

  const TypeOfSection TypeOfSection_reserved_ := 0; 

  const TypeOfSection TypeOfSection_checkpoint_ := 4; 

  const TypeOfSection TypeOfSection_closedEntry_ := 2; 

  const TypeOfSection TypeOfSection_closedExit_ := 3; 

  const TypeOfSection TypeOfSection_aggregatedTrx_ := 8; 

  const TypeOfSection TypeOfSection_distanceBasedFreeFlowPhysical_ := 6; 

  type record UsageStatementContent {
    boolean useOfUsageStatementAuthentication,
    boolean usageStatementId,
    boolean tollContext,
    boolean chargeReportFinalRecipient,
    boolean aggregatedFee,
    boolean sumVat,
    boolean aggregatedSingleTariffClassSession,
    boolean listOfChargeObjects,
    boolean listOfDSRCUsageData,
    boolean listOfRawUsageData,
    boolean noUsage,
    boolean additionalUsageInformation
  }

  type record UserClass {
    UserClassId userClassId,
    _0UserClass contractTypes optional,
    _0UserClass0 actualNumberOfPassengers optional,
    Int1 priorityValue optional
  }

  type record of ContractTypes _0UserClass; 

  type record of ActualNumberOfPassengers _0UserClass0; 

  type Int1 UserClassId; 

  type record VehicleClassRange {
    EfcDsrcApplication.VehicleClass lowerLimit,
    EfcDsrcApplication.VehicleClass upperLimit
  }

  type record VehicleDescriptionContent {
    boolean vehicleLPNr,
    boolean axles,
    boolean class,
    boolean dimensions,
    boolean specificCharacteristics,
    boolean ladenWeight,
    boolean weightLimits,
    boolean trailerCharacteristics
  }

  type Int1 VehicleFirstAxleHeight; 

  type record VehicleFirstAxleHeightRange {
    VehicleFirstAxleHeight lowerLimit,
    VehicleFirstAxleHeight upperLimit
  }

  type Int1 VehicleHeightOverall; 

  type record VehicleHeightOverallRange {
    VehicleHeightOverall lowerLimit,
    VehicleHeightOverall upperLimit
  }

  type Int1 VehicleLengthOverall; 

  type record VehicleLengthOverallRange {
    VehicleLengthOverall lowerLimit,
    VehicleLengthOverall upperLimit
  }

  type Int2 VehicleMaxLadenWeight; 

  type record VehicleMaxLadenWeightRange {
    VehicleMaxLadenWeight lowerLimit,
    VehicleMaxLadenWeight upperLImit
  }

  type record VehicleTractorAxlesNumberRange {
    EfcDsrcApplication.TractorAxles lowerLimit,
    EfcDsrcApplication.TractorAxles upperLimit
  }

  type record VehicleTrailerAxlesNumberRange {
    EfcDsrcApplication.TrailerAxles lowerLimit,
    EfcDsrcApplication.TrailerAxles upperLimit
  }

  type Int2 VehicleTrainMaximumWeight; 

  type record VehicleTrainMaximumWeightRange {
    VehicleTrainMaximumWeight lowerLimit,
    VehicleTrainMaximumWeight upperLimit
  }

  type record VehicleWeightLadenRange {
    EfcDsrcApplication.VehicleWeightLaden lowerLimit,
    EfcDsrcApplication.VehicleWeightLaden upperLimit
  }

  type Int1 VehicleWidthOverall; 

  type record VehicleWidthOverallRange {
    VehicleWidthOverall lowerLimit,
    VehicleWidthOverall upperLimit
  }

  type Int2 VehicleWeightUnladen; 

  type record VehicleWeightUnladenRange {
    VehicleWeightUnladen lowerLimit,
    VehicleWeightUnladen upperLimit
  }

  type record VersionAndValidity {
    EfcAutonomousCharging.VersionId version,
    ASNAUX.GeneralizedTime validFrom
  }

  type integer Weekday; 

  const Weekday Weekday_tuesday_ := 2; 

  const Weekday Weekday_reserved_ := 0; 

  const Weekday Weekday_friday_ := 5; 

  const Weekday Weekday_thursday_ := 4; 

  const Weekday Weekday_monday_ := 1; 

  const Weekday Weekday_wednesday_ := 3; 

  const Weekday Weekday_sunday_ := 7; 

  const Weekday Weekday_saturday_ := 6; 
}
