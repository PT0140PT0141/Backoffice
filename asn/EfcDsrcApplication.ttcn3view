/*
 * ----------------------------------------------------------------------------
 *  This file is automatically generated using TTworkbench Language Support ASN.1 Parser
 *  PLEASE DO NOT EDIT! The file will be overwritten when the input file changes.
 *
 *  Source:    EfcDsrcApplication.asn
 *  Generator: TTworkbench ASN.1 Parser 1.1.13.201605251730
 *  Date:      31/05/16 14:42
 *
 * ----------------------------------------------------------------------------
 *  The ASN.1 to TTCN-3 is a proprietary mapping based on the ES 201 873-7 ETSI standard.
 *  Details about the used mapping can be found in the TTworkbench documentation.
 *
 *  TTworkbench is a product of Testing Technologies.
 *  http://www.testingtech.com
 *
 *  TESTING TECHNOLOGIES DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
 *  SOFTWARE. IN NO EVENT SHALL TESTING TECHNOLOGIES BE LIABLE FOR ANY
 *  SPECIAL, DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 *  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 *  AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
 *  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
 *  THIS SOFTWARE.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 *  EITHER EXPRESSED OR IMPLIED, INCLUDING ANY KIND OF IMPLIED OR
 *  EXPRESSED WARRANTY OF NON-INFRINGEMENT OR THE IMPLIED WARRANTIES
 *  OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 *  (C) Copyright Testing Technologies, 2000-2016. All Rights Reserved.
 * ----------------------------------------------------------------------------
 */

module EfcDsrcApplication language "ASN.1:1997" {
  import from ASNAUX all; 

  import from AVIAEINumberingAndDataStructures language "ASN.1:1997" all; 

  import from EfcDsrcGeneric language "ASN.1:1997" all; 

  type Int1 ActualNumberOfPassengers; 

  type record AxleWeightLimits {
    Int2 maxLadenweightOnAxle1,
    Int2 maxLadenweightOnAxle2,
    Int2 maxLadenweightOnAxle3,
    Int2 maxLadenweightOnAxle4,
    Int2 maxLadenweightOnAxle5
  }

  type record AddRq {
    _0AddRq attributeId,
    integer value_
  }

  type integer _0AddRq (
    0 .. 127, 
    ?
  ); 

  type integer ChannelId (0 .. 255); 

  const ChannelId ChannelId_buzzer_ := 5; 

  const ChannelId ChannelId_tachograph_ := 10; 

  const ChannelId ChannelId_icc_ := 3; 

  const ChannelId ChannelId_gPS_ := 9; 

  const ChannelId ChannelId_privateUse3_ := 13; 

  const ChannelId ChannelId_sam2_ := 2; 

  const ChannelId ChannelId_display_ := 4; 

  const ChannelId ChannelId_privateUse4_ := 14; 

  const ChannelId ChannelId_privateUse1_ := 11; 

  const ChannelId ChannelId_privateUse2_ := 12; 

  const ChannelId ChannelId_sam1_ := 1; 

  const ChannelId ChannelId_bluetooth_ := 16; 

  const ChannelId ChannelId_printer_ := 6; 

  const ChannelId ChannelId_privateUse5_ := 15; 

  const ChannelId ChannelId_obu_ := 0; 

  const ChannelId ChannelId_serialInterface_ := 7; 

  const ChannelId ChannelId_parallelInterface_ := 8; 

  type record ChannelRq {
    ChannelId channelId,
    octetstring apdu
  }

  type record ChannelRs {
    ChannelId channelId,
    octetstring apdu
  }

  type record CopyRq {
    _0CopyRq destinationEID,
    EfcDsrcGeneric.AttributeIdList attributeIdList
  }

  type integer _0CopyRq (
    0 .. 127, 
    ?
  ); 

  type record CreditRq {
    PaymentFee refund,
    octetstring nonce,
    _0CreditRq key
  }

  type integer _0CreditRq (0 .. 255); 

  type record CreditRs {
    ResultFin creditResult,
    octetstring creditAuthenticator
  }

  type record DebitRq {
    PaymentFee debitPaymentFee,
    octetstring nonce,
    _0DebitRq keyRef
  }

  type integer _0DebitRq (0 .. 255); 

  type record DebitRs {
    ResultFin debitResult,
    octetstring debitAuthenticator
  }

  type record GetInstanceRq {
    _0GetInstanceRq posOfFirstInstance,
    _0GetInstanceRq0 posOfLastInstance,
    EfcDsrcGeneric.AttributeIdList attributeIdList
  }

  type integer _0GetInstanceRq (0 .. 255); 

  type integer _0GetInstanceRq0 (0 .. 255); 

  type record GetStampedRq {
    EfcDsrcGeneric.AttributeIdList attributeIdList,
    octetstring nonce,
    _0GetStampedRq keyRef
  }

  type integer _0GetStampedRq (0 .. 255); 

  type integer SetMMIRq (0 .. 255); 

  const SetMMIRq SetMMIRq_ok_ := 0; 

  const SetMMIRq SetMMIRq_contactOperator_ := 2; 

  const SetMMIRq SetMMIRq_nok_ := 1; 

  const SetMMIRq SetMMIRq_noSignalling_ := 255; 

  type record SubRq {
    _0SubRq attributeId,
    integer value_
  }

  type integer _0SubRq (
    0 .. 127, 
    ?
  ); 

  type Int2 CO2EmissionValue; 

  type Int4 ContractSerialNumber; 

  type octetstring ContractAuthenticator; 

  type record ContractValidity {
    _0ContractValidity contractRestrictions,
    DateCompact contractExpiryDate
  }

  type octetstring _0ContractValidity length (4); 

  type LPN ContractVehicle; 

  type record DateCompact {
    _0DateCompact year,
    _0DateCompact0 month,
    _0DateCompact1 day
  }

  type integer _0DateCompact0 (0 .. 12); 

  type integer _0DateCompact1 (0 .. 31); 

  type integer _0DateCompact (1990 .. 2117); 

  type integer DescriptiveCharacteristics (0 .. 255); 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape50_ := 50; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape30_ := 30; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape10_ := 10; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape42_ := 42; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape34_ := 34; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape22_ := 22; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape14_ := 14; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape46_ := 46; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape38_ := 38; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape26_ := 26; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape18_ := 18; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape3_ := 3; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape7_ := 7; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape43_ := 43; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape31_ := 31; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape23_ := 23; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape11_ := 11; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape8_ := 8; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape47_ := 47; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape35_ := 35; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape27_ := 27; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape15_ := 15; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape39_ := 39; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape19_ := 19; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape4_ := 4; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape40_ := 40; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape32_ := 32; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape20_ := 20; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape12_ := 12; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape44_ := 44; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape36_ := 36; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape9_ := 9; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape24_ := 24; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape16_ := 16; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape48_ := 48; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape28_ := 28; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape1_ := 1; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape5_ := 5; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape41_ := 41; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape21_ := 21; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape45_ := 45; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape33_ := 33; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape25_ := 25; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape13_ := 13; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape49_ := 49; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape37_ := 37; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape29_ := 29; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape17_ := 17; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape2_ := 2; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_vehicleShape6_ := 6; 

  const DescriptiveCharacteristics DescriptiveCharacteristics_noEntry_ := 0; 

  type record DieselEmissionValues {
    _0DieselEmissionValues particulate,
    Int2 absorptionCoeff
  }

  type record _0DieselEmissionValues {
    UnitType unitType,
    _0_0DieselEmissionValues value_
  }

  type integer _0_0DieselEmissionValues (0 .. 32767); 

  type record DriverCharacteristics {
    Int1 driverClass,
    Int1 tripPurpose
  }

  type record EFC_ContextMark {
    Provider contractProvider,
    _0EFC_ContextMark typeOfContract,
    _0EFC_ContextMark0 contextVersion
  }

  type octetstring _0EFC_ContextMark length (2); 

  type integer _0EFC_ContextMark0 (
    0 .. 127, 
    ?
  ); 

  type record EnvironmentalCharacteristics {
    EuroValue euroValue,
    CopValue copValue
  }

  type enumerated EuroValue {
    noEntry(0), 
    euro_1(1), 
    euro_2(2), 
    euro_3(3), 
    euro_4(4), 
    euro_5(5), 
    euro_6(6), 
    reservedForUse1(7), 
    reservedForUse2(8), 
    reservedForUse3(9), 
    reservedForUse4(10), 
    reservedForUse5(11), 
    reservedForUse6(12), 
    reservedForUse7(13), 
    reservedForUse8(14), 
    eev(15)
  }

  type enumerated CopValue {
    noEntry(0), 
    co2class1(1), 
    co2class2(2), 
    co2class3(3), 
    co2class4(4), 
    co2class5(5), 
    co2class6(6), 
    co2class7(7), 
    reservedforUse(8)
  }

  type integer EngineCharacteristics (0 .. 255); 

  const EngineCharacteristics EngineCharacteristics_noEngine_ := 1; 

  const EngineCharacteristics EngineCharacteristics_hydrogen_ := 9; 

  const EngineCharacteristics EngineCharacteristics_battery_ := 6; 

  const EngineCharacteristics EngineCharacteristics_noEntry_ := 0; 

  const EngineCharacteristics EngineCharacteristics_petrolLeaded_ := 3; 

  const EngineCharacteristics EngineCharacteristics_lPG_ := 5; 

  const EngineCharacteristics EngineCharacteristics_hybrid_ := 8; 

  const EngineCharacteristics EngineCharacteristics_diesel_ := 4; 

  const EngineCharacteristics EngineCharacteristics_petrolUnleaded_ := 2; 

  const EngineCharacteristics EngineCharacteristics_solar_ := 7; 

  type record Engine {
    Int2 engineCapacity,
    Int2 enginePower
  }

  type octetstring EquipmentOBUId; 

  type bitstring EquipmentStatus length (16); 

  type record ExhaustEmissionValues {
    UnitType unitType,
    _0ExhaustEmissionValues emissionCO,
    Int2 emissionHC,
    Int2 emissionNOX,
    Int2 emissionHCNOX
  }

  type integer _0ExhaustEmissionValues (0 .. 32767); 

  type integer FutureCharacteristics (0 .. 255); 

  const FutureCharacteristics FutureCharacteristics_airSuspension_ := 1; 

  const FutureCharacteristics FutureCharacteristics_noEntry_ := 0; 

  type octetstring ICC_Id; 

  type integer Int1 (0 .. 255); 

  type integer Int2 (0 .. 65535); 

  type integer Int3 (0 .. 16777215); 

  type integer Int4 (0 .. 4294967295); 

  type record LPN {
    AVIAEINumberingAndDataStructures.CountryCode countryCode,
    _0LPN alphabetIndicator,
    octetstring licencePlateNumber
  }

  type enumerated _0LPN {
    latinAlphabetNo1(1), 
    latinAlphabetNo2(2), 
    latinAlphabetNo3(3), 
    latinAlphabetNo4(4), 
    latinCyrillicAlphabet(5), 
    latinArabicAlphabet(6), 
    latinGreekAlphabet(7), 
    latinHebrewAlphabet(8), 
    latinAlphabetNo5(9), 
    latinAlphabetNo6(10), 
    twoOctetBMP(11), 
    fourOctetCanonical(12), 
    reservedForUse1(13), 
    reservedForUse2(14), 
    reservedForUse3(15), 
    reservedForUse4(16), 
    reservedForUse5(17), 
    reservedForUse6(18), 
    reservedForUse7(19), 
    reservedForUse8(20), 
    reservedForUse9(21), 
    reservedForUse10(22), 
    reservedForUse11(23), 
    reservedForUse12(24), 
    reservedForUse13(25), 
    reservedForUse14(26), 
    reservedForUse15(27), 
    reservedForUse16(28), 
    reservedForUse17(29), 
    reservedForUse18(30), 
    reservedForUse19(31), 
    reservedForUse20(32), 
    reservedForUse21(33)
  }

  type record PassengerCapacity {
    Int1 numberOfSeats,
    Int1 numberOfStandingPlaces
  }

  type record PaymentFee {
    Int2 paymentFeeAmount,
    PayUnit paymentFeeUnit
  }

  type record PaymentMeans {
    PersonalAccountNumber personalAccountNumber,
    DateCompact paymentMeansExpiryDate,
    _0PaymentMeans pamentMeansUsageControl
  }

  type octetstring _0PaymentMeans length (2); 

  type SignedValue PaymentMeansBalance; 

  type union SignedValue {
    _0SignedValue positive,
    _0SignedValue0 negative
  }

  type integer _0SignedValue (0 .. 8388607); 

  type integer _0SignedValue0 (-8388608 .. -1); 

  type PayUnit PaymentMeansUnit; 

  type octetstring PaymentSecurityData; 

  type octetstring PayUnit length (2); 

  type octetstring PersonalAccountNumber length (10); 

  type record Provider {
    AVIAEINumberingAndDataStructures.CountryCode countryCode,
    AVIAEINumberingAndDataStructures.IssuerIdentifier providerIdentifier
  }

  type record PurseBalance {
    SignedValue purseValue,
    PayUnit purseUnit
  }

  type record ReceiptContract {
    Provider sessionContractProvider,
    _0ReceiptContract sessionTypeOfContract,
    Int4 sessionContractSerialNumber
  }

  type octetstring _0ReceiptContract length (2); 

  type ReceiptData ReceiptData1; 

  type ReceiptData ReceiptData2; 

  type record ReceiptData {
    DateAndTime sessionTime,
    Provider sessionServiceProvider,
    Int2 locationOfStation,
    SessionLocation sessionLocation,
    Int1 sessionType,
    ResultOp sessionResult,
    Int1 sessionTariffClass,
    Int1 sessionClaimedClass,
    PaymentFee sessionFee,
    Provider sessionContractProvider,
    _0ReceiptData sessionTypeOfContract,
    _0ReceiptData0 sessionContextVersion,
    _0ReceiptData1 receiptDataAuthenticator
  }

  type integer _0ReceiptData0 (
    0 .. 127, 
    ?
  ); 

  type octetstring _0ReceiptData length (2); 

  type octetstring _0ReceiptData1 length (4); 

  type Int3 ReceiptDistance; 

  type record ReceiptFinancialPart {
    PersonalAccountNumber personalAccountNumber,
    PaymentFee sessionPaymentFee,
    PurseBalance sessionCurrentBalance,
    Int4 receiptFinancialSerialNumber
  }

  type ICC_Id ReceiptICC_Id; 

  type octetstring ReceiptOBUId; 

  type record ReceiptServicePart {
    DateAndTime sessionTime,
    Provider sessionServiceProvider,
    _0ReceiptServicePart stationLocation,
    _0ReceiptServicePart0 sessionLocation,
    StationType typeOfSession,
    ResultOp sessionResultOperational,
    ResultFin sessionResultFinancial
  }

  type integer _0ReceiptServicePart (0 .. 1048575); 

  type bitstring _0ReceiptServicePart0 length (8); 

  type Int3 ReceiptServiceSerialNumber; 

  type octetstring ReceiptAuthenticator; 

  type octetstring ReceiptText; 

  type octetstring ResultFin length (1); 

  type integer ResultOp (0 .. 255); 

  const ResultOp ResultOp_vehicleClassAuthenticationFailed_ := 9; 

  const ResultOp ResultOp_entryReceiptNotValid_ := 12; 

  const ResultOp ResultOp_contractAuthenticatorNotAccepted_ := 17; 

  const ResultOp ResultOp_timeDifference_ := 15; 

  const ResultOp ResultOp_accessCredentialsNotAccepted_ := 16; 

  const ResultOp ResultOp_claimedVehicleCharacteristicsNotValid_ := 8; 

  const ResultOp ResultOp_contractIdentifierInBlackList_ := 4; 

  const ResultOp ResultOp_expiredContract_ := 6; 

  const ResultOp ResultOp_claimedVehicleCharacteristicsMissing_ := 19; 

  const ResultOp ResultOp_entryVehicleClassDifferentFromExitVehicleClass_ := 10; 

  const ResultOp ResultOp_contractIdentifierNotCorrect_ := 5; 

  const ResultOp ResultOp_expiredPaymentMeans_ := 24; 

  const ResultOp ResultOp_paymentMeansRestrictionsNotFulfilled_ := 25; 

  const ResultOp ResultOp_equipmentStatusNotAccepted_ := 2; 

  const ResultOp ResultOp_entryTollStationNotValid_ := 13; 

  const ResultOp ResultOp_paymentAuthenticatorNotAccepted_ := 21; 

  const ResultOp ResultOp_receiptAuthenticatorNotAccepted_ := 18; 

  const ResultOp ResultOp_contractNotInWhiteList_ := 3; 

  const ResultOp ResultOp_paymentMeansNotAccepted_ := 20; 

  const ResultOp ResultOp_correctTransaction_ := 0; 

  const ResultOp ResultOp_obeStatusNotAccepted_ := 1; 

  const ResultOp ResultOp_paymentMeansInBlackList_ := 22; 

  const ResultOp ResultOp_contractRestrictionsNotFulfilled_ := 7; 

  const ResultOp ResultOp_entryReceiptMissing_ := 11; 

  const ResultOp ResultOp_paymentMeansNotCorrect_ := 23; 

  const ResultOp ResultOp_equipmentNotCertified_ := 14; 

  type record SessionClass {
    Int1 sessionTariffClass,
    Int1 sessionClaimedClass
  }

  type record SessionLocation {
    boolean ascendingKilometrage,
    _0SessionLocation laneCodeNumber
  }

  type integer _0SessionLocation (0 .. 127); 

  type enumerated StationType {
    unspecified(0), 
    closedEntryWithPayment(1), 
    closedEntryWithoutPayment(2), 
    closedTransit(3), 
    closedExit(4), 
    closedCredit(5), 
    mixed_(6), 
    passage(7), 
    checkpoint(8), 
    reload(9), 
    reservedForFutureCENUse1(10), 
    reservedForFutureCENUse2(11), 
    reservedForFutureCENUse3(12), 
    reservedForFutureCENUse4(13), 
    privateUse5(14), 
    privateUse6(15)
  }

  type record DateAndTime {
    DateCompact timeDate,
    _0DateAndTime timeCompact
  }

  type record _0DateAndTime {
    _0_0DateAndTime hours,
    _0_0DateAndTime0 mins,
    _0_0DateAndTime1 double_secs
  }

  type integer _0_0DateAndTime (0 .. 23); 

  type integer _0_0DateAndTime0 (0 .. 59); 

  type integer _0_0DateAndTime1 (0 .. 30); 

  type record SoundLevel {
    Int1 soundstationary,
    Int1 sounddriveby
  }

  type record TrailerCharacteristics {
    TrailerDetails trailerDetails,
    Int2 trailerMaxLadenWeight,
    Int2 trailerWeightUnladen
  }

  type record TrailerDetails {
    _0TrailerDetails trailerType,
    TrailerAxles trailerAxles
  }

  type integer _0TrailerDetails (0 .. 31); 

  const _0TrailerDetails TrailerDetails_trailerType_trailer_ := 1; 

  const _0TrailerDetails TrailerDetails_trailerType_semitrailer_ := 2; 

  const _0TrailerDetails TrailerDetails_trailerType_notPresent_ := 0; 

  type LPN TrailerLicencePlateNumber; 

  type enumerated UnitType {
    mg_km(0), 
    mg_kWh(1)
  }

  type record ValidityOfContract {
    _0ValidityOfContract issuerRestrictions,
    DateCompact contractExpiryDate
  }

  type octetstring _0ValidityOfContract length (2); 

  type octetstring VehicleAuthenticator; 

  type record VehicleAxles {
    Int1 vehicleFirstAxleHeight,
    _0VehicleAxles vehicleAxlesNumber
  }

  type record _0VehicleAxles {
    _0_0VehicleAxles tyreType,
    _0_0VehicleAxles0 numberOfAxles
  }

  type enumerated _0_0VehicleAxles {
    notSpecified(0), 
    singleTyre(1), 
    dualTyres(2), 
    reservedForUse(3)
  }

  type record _0_0VehicleAxles0 {
    TrailerAxles trailerAxles,
    TractorAxles tractorAxles
  }

  type integer TrailerAxles (0 .. 7); 

  type integer TractorAxles (0 .. 7); 

  type Int1 VehicleClass; 

  type record VehicleDimensions {
    Int1 vehicleLengthOverall,
    Int1 vehicleHeigthOverall,
    Int1 vehicleWidthOverall
  }

  type LPN VehicleLicencePlateNumber; 

  type AVIAEINumberingAndDataStructures.CS5 VehicleIdentificationNumber; 

  type record VehicleSpecificCharacteristics {
    EnvironmentalCharacteristics environmentalCharacteristics,
    EngineCharacteristics engineCharacteristics,
    DescriptiveCharacteristics descriptiveCharacteristics,
    FutureCharacteristics futureCharacteristics
  }

  type Int4 VehicleTotalDistance; 

  type Int2 VehicleWeightLaden; 

  type Int2 VehicleCurrentMaxTrainWeight; 

  type record VehicleWeightLimits {
    Int2 vehicleMaxLadenWeight,
    Int2 vehicleTrainMaximumWeight,
    Int2 vehicleWeightUnladen
  }

}
