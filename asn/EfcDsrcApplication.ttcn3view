/*
 * ----------------------------------------------------------------------------
 *  This file is automatically generated using TTworkbench Language Support ASN.1 Parser
 *  PLEASE DO NOT EDIT! The file will be overwritten when the input file changes.
 *
 *  Source:    EfcDsrcApplication.asn
 *  Generator: TTworkbench ASN.1 Parser 2.25.0.201711292344
 *  Date:      9/12/18 11:07 AM
 *
 * ----------------------------------------------------------------------------
 *  The ASN.1 to TTCN-3 is a proprietary mapping based on the ES 201 873-7 ETSI standard.
 *  Details about the used mapping can be found in the TTworkbench documentation.
 *
 *  TTworkbench is a product of Spirent Communications.
 *  https://www.spirent.com/TTworkbench
 *
 *  SPIRENT COMMUNICATIONS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
 *  SOFTWARE. IN NO EVENT SHALL SPIRENT COMMUNICATIONS BE LIABLE FOR ANY
 *  SPECIAL, DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 *  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 *  AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
 *  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
 *  THIS SOFTWARE.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 *  EITHER EXPRESSED OR IMPLIED, INCLUDING ANY KIND OF IMPLIED OR
 *  EXPRESSED WARRANTY OF NON-INFRINGEMENT OR THE IMPLIED WARRANTIES
 *  OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 *  (C) Copyright Spirent Communications, 2000-2018. All Rights Reserved.
 * ----------------------------------------------------------------------------
 */

module EfcDsrcApplication language "ASN.1:1997" {
  import from ASNAUX all; 

  import from AVIAEINumberingAndDataStructures language "ASN.1:1997" all; 

  import from EfcDsrcGeneric language "ASN.1:1997" all; 

  type Int1 ActualNumberOfPassengers; 

  type record AxleWeightLimits {
    Int2 maxLadenweightOnAxle1,
    Int2 maxLadenweightOnAxle2,
    Int2 maxLadenweightOnAxle3,
    Int2 maxLadenweightOnAxle4,
    Int2 maxLadenweightOnAxle5
  }

  type record AddRq {
    integer attributeId (
      0 .. 127, 
      ?
    ),
    integer value_
  }

  type integer ChannelId (0 .. 255); 

  const integer ChannelId_obu_ := 0; 

  const integer ChannelId_sam1_ := 1; 

  const integer ChannelId_sam2_ := 2; 

  const integer ChannelId_icc_ := 3; 

  const integer ChannelId_display_ := 4; 

  const integer ChannelId_buzzer_ := 5; 

  const integer ChannelId_printer_ := 6; 

  const integer ChannelId_serialInterface_ := 7; 

  const integer ChannelId_parallelInterface_ := 8; 

  const integer ChannelId_gPS_ := 9; 

  const integer ChannelId_tachograph_ := 10; 

  const integer ChannelId_privateUse1_ := 11; 

  const integer ChannelId_privateUse2_ := 12; 

  const integer ChannelId_privateUse3_ := 13; 

  const integer ChannelId_privateUse4_ := 14; 

  const integer ChannelId_privateUse5_ := 15; 

  const integer ChannelId_bluetooth_ := 16; 

  type record ChannelRq {
    ChannelId channelId,
    octetstring apdu
  }

  type record ChannelRs {
    ChannelId channelId,
    octetstring apdu
  }

  type record CopyRq {
    integer destinationEID (
      0 .. 127, 
      ?
    ),
    EfcDsrcGeneric.AttributeIdList attributeIdList
  }

  type record CreditRq {
    PaymentFee refund,
    octetstring nonce,
    integer key (0 .. 255)
  }

  type record CreditRs {
    ResultFin creditResult,
    octetstring creditAuthenticator
  }

  type record DebitRq {
    PaymentFee debitPaymentFee,
    octetstring nonce,
    integer keyRef (0 .. 255)
  }

  type record DebitRs {
    ResultFin debitResult,
    octetstring debitAuthenticator
  }

  type record GetInstanceRq {
    integer posOfFirstInstance (0 .. 255),
    integer posOfLastInstance (0 .. 255),
    EfcDsrcGeneric.AttributeIdList attributeIdList
  }

  type record GetStampedRq {
    EfcDsrcGeneric.AttributeIdList attributeIdList,
    octetstring nonce,
    integer keyRef (0 .. 255)
  }

  type integer SetMMIRq (0 .. 255); 

  const integer SetMMIRq_ok_ := 0; 

  const integer SetMMIRq_nok_ := 1; 

  const integer SetMMIRq_contactOperator_ := 2; 

  const integer SetMMIRq_noSignalling_ := 255; 

  type record SubRq {
    integer attributeId (
      0 .. 127, 
      ?
    ),
    integer value_
  }

  type Int2 CO2EmissionValue; 

  type Int4 ContractSerialNumber; 

  type octetstring ContractAuthenticator; 

  type record ContractValidity {
    octetstring contractRestrictions length (4),
    DateCompact contractExpiryDate
  }

  type LPN ContractVehicle; 

  type record DateCompact {
    integer year (1990 .. 2117),
    integer month (0 .. 12),
    integer day (0 .. 31)
  }

  type integer DescriptiveCharacteristics (0 .. 255); 

  const integer DescriptiveCharacteristics_noEntry_ := 0; 

  const integer DescriptiveCharacteristics_vehicleShape1_ := 1; 

  const integer DescriptiveCharacteristics_vehicleShape2_ := 2; 

  const integer DescriptiveCharacteristics_vehicleShape3_ := 3; 

  const integer DescriptiveCharacteristics_vehicleShape4_ := 4; 

  const integer DescriptiveCharacteristics_vehicleShape5_ := 5; 

  const integer DescriptiveCharacteristics_vehicleShape6_ := 6; 

  const integer DescriptiveCharacteristics_vehicleShape7_ := 7; 

  const integer DescriptiveCharacteristics_vehicleShape8_ := 8; 

  const integer DescriptiveCharacteristics_vehicleShape9_ := 9; 

  const integer DescriptiveCharacteristics_vehicleShape10_ := 10; 

  const integer DescriptiveCharacteristics_vehicleShape11_ := 11; 

  const integer DescriptiveCharacteristics_vehicleShape12_ := 12; 

  const integer DescriptiveCharacteristics_vehicleShape13_ := 13; 

  const integer DescriptiveCharacteristics_vehicleShape14_ := 14; 

  const integer DescriptiveCharacteristics_vehicleShape15_ := 15; 

  const integer DescriptiveCharacteristics_vehicleShape16_ := 16; 

  const integer DescriptiveCharacteristics_vehicleShape17_ := 17; 

  const integer DescriptiveCharacteristics_vehicleShape18_ := 18; 

  const integer DescriptiveCharacteristics_vehicleShape19_ := 19; 

  const integer DescriptiveCharacteristics_vehicleShape20_ := 20; 

  const integer DescriptiveCharacteristics_vehicleShape21_ := 21; 

  const integer DescriptiveCharacteristics_vehicleShape22_ := 22; 

  const integer DescriptiveCharacteristics_vehicleShape23_ := 23; 

  const integer DescriptiveCharacteristics_vehicleShape24_ := 24; 

  const integer DescriptiveCharacteristics_vehicleShape25_ := 25; 

  const integer DescriptiveCharacteristics_vehicleShape26_ := 26; 

  const integer DescriptiveCharacteristics_vehicleShape27_ := 27; 

  const integer DescriptiveCharacteristics_vehicleShape28_ := 28; 

  const integer DescriptiveCharacteristics_vehicleShape29_ := 29; 

  const integer DescriptiveCharacteristics_vehicleShape30_ := 30; 

  const integer DescriptiveCharacteristics_vehicleShape31_ := 31; 

  const integer DescriptiveCharacteristics_vehicleShape32_ := 32; 

  const integer DescriptiveCharacteristics_vehicleShape33_ := 33; 

  const integer DescriptiveCharacteristics_vehicleShape34_ := 34; 

  const integer DescriptiveCharacteristics_vehicleShape35_ := 35; 

  const integer DescriptiveCharacteristics_vehicleShape36_ := 36; 

  const integer DescriptiveCharacteristics_vehicleShape37_ := 37; 

  const integer DescriptiveCharacteristics_vehicleShape38_ := 38; 

  const integer DescriptiveCharacteristics_vehicleShape39_ := 39; 

  const integer DescriptiveCharacteristics_vehicleShape40_ := 40; 

  const integer DescriptiveCharacteristics_vehicleShape41_ := 41; 

  const integer DescriptiveCharacteristics_vehicleShape42_ := 42; 

  const integer DescriptiveCharacteristics_vehicleShape43_ := 43; 

  const integer DescriptiveCharacteristics_vehicleShape44_ := 44; 

  const integer DescriptiveCharacteristics_vehicleShape45_ := 45; 

  const integer DescriptiveCharacteristics_vehicleShape46_ := 46; 

  const integer DescriptiveCharacteristics_vehicleShape47_ := 47; 

  const integer DescriptiveCharacteristics_vehicleShape48_ := 48; 

  const integer DescriptiveCharacteristics_vehicleShape49_ := 49; 

  const integer DescriptiveCharacteristics_vehicleShape50_ := 50; 

  type record DieselEmissionValues {
    record {
      UnitType unitType,
      integer value_ (0 .. 32767)
    } particulate,
    Int2 absorptionCoeff
  }

  type record DriverCharacteristics {
    Int1 driverClass,
    Int1 tripPurpose
  }

  type record EFC_ContextMark {
    Provider contractProvider,
    octetstring typeOfContract length (2),
    integer contextVersion (
      0 .. 127, 
      ?
    )
  }

  type record EnvironmentalCharacteristics {
    EuroValue euroValue,
    CopValue copValue
  }

  type enumerated EuroValue {
    noEntry(0), 
    euro_1(1), 
    euro_2(2), 
    euro_3(3), 
    euro_4(4), 
    euro_5(5), 
    euro_6(6), 
    reservedForUse1(7), 
    reservedForUse2(8), 
    reservedForUse3(9), 
    reservedForUse4(10), 
    reservedForUse5(11), 
    reservedForUse6(12), 
    reservedForUse7(13), 
    reservedForUse8(14), 
    eev(15)
  }

  type enumerated CopValue {
    noEntry(0), 
    co2class1(1), 
    co2class2(2), 
    co2class3(3), 
    co2class4(4), 
    co2class5(5), 
    co2class6(6), 
    co2class7(7), 
    reservedforUse(8)
  }

  type integer EngineCharacteristics (0 .. 255); 

  const integer EngineCharacteristics_noEntry_ := 0; 

  const integer EngineCharacteristics_noEngine_ := 1; 

  const integer EngineCharacteristics_petrolUnleaded_ := 2; 

  const integer EngineCharacteristics_petrolLeaded_ := 3; 

  const integer EngineCharacteristics_diesel_ := 4; 

  const integer EngineCharacteristics_lPG_ := 5; 

  const integer EngineCharacteristics_battery_ := 6; 

  const integer EngineCharacteristics_solar_ := 7; 

  const integer EngineCharacteristics_hybrid_ := 8; 

  const integer EngineCharacteristics_hydrogen_ := 9; 

  type record Engine {
    Int2 engineCapacity,
    Int2 enginePower
  }

  type octetstring EquipmentOBUId; 

  type bitstring EquipmentStatus length (16); 

  type record ExhaustEmissionValues {
    UnitType unitType,
    integer emissionCO (0 .. 32767),
    Int2 emissionHC,
    Int2 emissionNOX,
    Int2 emissionHCNOX
  }

  type integer FutureCharacteristics (0 .. 255); 

  const integer FutureCharacteristics_noEntry_ := 0; 

  const integer FutureCharacteristics_airSuspension_ := 1; 

  type octetstring ICC_Id; 

  type integer Int1 (0 .. 255); 

  type integer Int2 (0 .. 65535); 

  type integer Int3 (0 .. 16777215); 

  type integer Int4 (0 .. 4294967295); 

  type record LPN {
    AVIAEINumberingAndDataStructures.CountryCode countryCode,
    enumerated {
      latinAlphabetNo1(1),
      latinAlphabetNo2(2),
      latinAlphabetNo3(3),
      latinAlphabetNo4(4),
      latinCyrillicAlphabet(5),
      latinArabicAlphabet(6),
      latinGreekAlphabet(7),
      latinHebrewAlphabet(8),
      latinAlphabetNo5(9),
      latinAlphabetNo6(10),
      twoOctetBMP(11),
      fourOctetCanonical(12),
      reservedForUse1(13),
      reservedForUse2(14),
      reservedForUse3(15),
      reservedForUse4(16),
      reservedForUse5(17),
      reservedForUse6(18),
      reservedForUse7(19),
      reservedForUse8(20),
      reservedForUse9(21),
      reservedForUse10(22),
      reservedForUse11(23),
      reservedForUse12(24),
      reservedForUse13(25),
      reservedForUse14(26),
      reservedForUse15(27),
      reservedForUse16(28),
      reservedForUse17(29),
      reservedForUse18(30),
      reservedForUse19(31),
      reservedForUse20(32),
      reservedForUse21(33)
    } alphabetIndicator,
    octetstring licencePlateNumber
  }

  type record PassengerCapacity {
    Int1 numberOfSeats,
    Int1 numberOfStandingPlaces
  }

  type record PaymentFee {
    Int2 paymentFeeAmount,
    PayUnit paymentFeeUnit
  }

  type record PaymentMeans {
    PersonalAccountNumber personalAccountNumber,
    DateCompact paymentMeansExpiryDate,
    octetstring pamentMeansUsageControl length (2)
  }

  type SignedValue PaymentMeansBalance; 

  type union SignedValue {
    integer positive (0 .. 8388607),
    integer negative (-8388608 .. -1)
  }

  type PayUnit PaymentMeansUnit; 

  type octetstring PaymentSecurityData; 

  type octetstring PayUnit length (2); 

  type octetstring PersonalAccountNumber length (10); 

  type record Provider {
    AVIAEINumberingAndDataStructures.CountryCode countryCode,
    AVIAEINumberingAndDataStructures.IssuerIdentifier providerIdentifier
  }

  type record PurseBalance {
    SignedValue purseValue,
    PayUnit purseUnit
  }

  type record ReceiptContract {
    Provider sessionContractProvider,
    octetstring sessionTypeOfContract length (2),
    Int4 sessionContractSerialNumber
  }

  type ReceiptData ReceiptData1; 

  type ReceiptData ReceiptData2; 

  type record ReceiptData {
    DateAndTime sessionTime,
    Provider sessionServiceProvider,
    Int2 locationOfStation,
    SessionLocation sessionLocation,
    Int1 sessionType,
    ResultOp sessionResult,
    Int1 sessionTariffClass,
    Int1 sessionClaimedClass,
    PaymentFee sessionFee,
    Provider sessionContractProvider,
    octetstring sessionTypeOfContract length (2),
    integer sessionContextVersion (
      0 .. 127, 
      ?
    ),
    octetstring receiptDataAuthenticator length (4)
  }

  type Int3 ReceiptDistance; 

  type record ReceiptFinancialPart {
    PersonalAccountNumber personalAccountNumber,
    PaymentFee sessionPaymentFee,
    PurseBalance sessionCurrentBalance,
    Int4 receiptFinancialSerialNumber
  }

  type ICC_Id ReceiptICC_Id; 

  type octetstring ReceiptOBUId; 

  type record ReceiptServicePart {
    DateAndTime sessionTime,
    Provider sessionServiceProvider,
    integer stationLocation (0 .. 1048575),
    bitstring sessionLocation length (8),
    StationType typeOfSession,
    ResultOp sessionResultOperational,
    ResultFin sessionResultFinancial
  }

  type Int3 ReceiptServiceSerialNumber; 

  type octetstring ReceiptAuthenticator; 

  type octetstring ReceiptText; 

  type octetstring ResultFin length (1); 

  type integer ResultOp (0 .. 255); 

  const integer ResultOp_correctTransaction_ := 0; 

  const integer ResultOp_obeStatusNotAccepted_ := 1; 

  const integer ResultOp_equipmentStatusNotAccepted_ := 2; 

  const integer ResultOp_contractNotInWhiteList_ := 3; 

  const integer ResultOp_contractIdentifierInBlackList_ := 4; 

  const integer ResultOp_contractIdentifierNotCorrect_ := 5; 

  const integer ResultOp_expiredContract_ := 6; 

  const integer ResultOp_contractRestrictionsNotFulfilled_ := 7; 

  const integer ResultOp_claimedVehicleCharacteristicsNotValid_ := 8; 

  const integer ResultOp_vehicleClassAuthenticationFailed_ := 9; 

  const integer ResultOp_entryVehicleClassDifferentFromExitVehicleClass_ := 10; 

  const integer ResultOp_entryReceiptMissing_ := 11; 

  const integer ResultOp_entryReceiptNotValid_ := 12; 

  const integer ResultOp_entryTollStationNotValid_ := 13; 

  const integer ResultOp_equipmentNotCertified_ := 14; 

  const integer ResultOp_timeDifference_ := 15; 

  const integer ResultOp_accessCredentialsNotAccepted_ := 16; 

  const integer ResultOp_contractAuthenticatorNotAccepted_ := 17; 

  const integer ResultOp_receiptAuthenticatorNotAccepted_ := 18; 

  const integer ResultOp_claimedVehicleCharacteristicsMissing_ := 19; 

  const integer ResultOp_paymentMeansNotAccepted_ := 20; 

  const integer ResultOp_paymentAuthenticatorNotAccepted_ := 21; 

  const integer ResultOp_paymentMeansInBlackList_ := 22; 

  const integer ResultOp_paymentMeansNotCorrect_ := 23; 

  const integer ResultOp_expiredPaymentMeans_ := 24; 

  const integer ResultOp_paymentMeansRestrictionsNotFulfilled_ := 25; 

  type record SessionClass {
    Int1 sessionTariffClass,
    Int1 sessionClaimedClass
  }

  type record SessionLocation {
    boolean ascendingKilometrage,
    integer laneCodeNumber (0 .. 127)
  }

  type enumerated StationType {
    unspecified(0), 
    closedEntryWithPayment(1), 
    closedEntryWithoutPayment(2), 
    closedTransit(3), 
    closedExit(4), 
    closedCredit(5), 
    mixed_(6), 
    passage(7), 
    checkpoint(8), 
    reload(9), 
    reservedForFutureCENUse1(10), 
    reservedForFutureCENUse2(11), 
    reservedForFutureCENUse3(12), 
    reservedForFutureCENUse4(13), 
    privateUse5(14), 
    privateUse6(15)
  }

  type record DateAndTime {
    DateCompact timeDate,
    record {
      integer hours (0 .. 23),
      integer mins (0 .. 59),
      integer double_secs (0 .. 30)
    } timeCompact
  }

  type record SoundLevel {
    Int1 soundstationary,
    Int1 sounddriveby
  }

  type record TrailerCharacteristics {
    TrailerDetails trailerDetails,
    Int2 trailerMaxLadenWeight,
    Int2 trailerWeightUnladen
  }

  type record TrailerDetails {
    integer trailerType (0 .. 31),
    TrailerAxles trailerAxles
  }

  const integer TrailerDetails_trailerType_notPresent_ := 0; 

  const integer TrailerDetails_trailerType_trailer_ := 1; 

  const integer TrailerDetails_trailerType_semitrailer_ := 2; 

  type LPN TrailerLicencePlateNumber; 

  type enumerated UnitType {
    mg_km(0), 
    mg_kWh(1)
  }

  type record ValidityOfContract {
    octetstring issuerRestrictions length (2),
    DateCompact contractExpiryDate
  }

  type octetstring VehicleAuthenticator; 

  type record VehicleAxles {
    Int1 vehicleFirstAxleHeight,
    record {
      enumerated {
        notSpecified(0),
        singleTyre(1),
        dualTyres(2),
        reservedForUse(3)
      } tyreType,
      record {
        TrailerAxles trailerAxles,
        TractorAxles tractorAxles
      } numberOfAxles
    } vehicleAxlesNumber
  }

  type integer TrailerAxles (0 .. 7); 

  type integer TractorAxles (0 .. 7); 

  type Int1 VehicleClass; 

  type record VehicleDimensions {
    Int1 vehicleLengthOverall,
    Int1 vehicleHeigthOverall,
    Int1 vehicleWidthOverall
  }

  type LPN VehicleLicencePlateNumber; 

  type AVIAEINumberingAndDataStructures.CS5 VehicleIdentificationNumber; 

  type record VehicleSpecificCharacteristics {
    EnvironmentalCharacteristics environmentalCharacteristics,
    EngineCharacteristics engineCharacteristics,
    DescriptiveCharacteristics descriptiveCharacteristics,
    FutureCharacteristics futureCharacteristics
  }

  type Int4 VehicleTotalDistance; 

  type Int2 VehicleWeightLaden; 

  type Int2 VehicleCurrentMaxTrainWeight; 

  type record VehicleWeightLimits {
    Int2 vehicleMaxLadenWeight,
    Int2 vehicleTrainMaximumWeight,
    Int2 vehicleWeightUnladen
  }

}
