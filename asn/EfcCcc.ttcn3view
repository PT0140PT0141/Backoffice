/*
 * ----------------------------------------------------------------------------
 *  This file is automatically generated using TTworkbench Language Support ASN.1 Parser
 *  PLEASE DO NOT EDIT! The file will be overwritten when the input file changes.
 *
 *  Source:    EfcCcc.asn
 *  Generator: TTworkbench ASN.1 Parser 1.1.14.201606151123
 *  Date:      8/28/17 8:58 PM
 *
 * ----------------------------------------------------------------------------
 *  The ASN.1 to TTCN-3 is a proprietary mapping based on the ES 201 873-7 ETSI standard.
 *  Details about the used mapping can be found in the TTworkbench documentation.
 *
 *  TTworkbench is a product of Testing Technologies.
 *  http://www.testingtech.com
 *
 *  TESTING TECHNOLOGIES DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
 *  SOFTWARE. IN NO EVENT SHALL TESTING TECHNOLOGIES BE LIABLE FOR ANY
 *  SPECIAL, DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 *  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 *  AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
 *  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
 *  THIS SOFTWARE.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 *  EITHER EXPRESSED OR IMPLIED, INCLUDING ANY KIND OF IMPLIED OR
 *  EXPRESSED WARRANTY OF NON-INFRINGEMENT OR THE IMPLIED WARRANTIES
 *  OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 *  (C) Copyright Testing Technologies, 2000-2017. All Rights Reserved.
 * ----------------------------------------------------------------------------
 */

module EfcCcc language "ASN.1:1997" {
  import from ASNAUX all; 

  import from EfcDsrcApplication language "ASN.1:1997" {
    type EquipmentOBUId, EFC_ContextMark, LPN, VehicleAxles, VehicleSpecificCharacteristics, VehicleCurrentMaxTrainWeight, PaymentMeans, Provider; 
  }; 

  import from AVIAEINumberingAndDataStructures language "ASN.1:1997" {
    type CS5, IssuerIdentifier, CountryCode; 
  }; 

  import from EfcDsrcGeneric language "ASN.1:1997" {
    type AttributeIdList; 
  }; 

  import from EfcAutonomousContextData language "ASN.1:1997" {
    type LocalVehicleClassId; 
  }; 

  import from EfcAutonomousCharging language "ASN.1:1997" {
    type VersionId, MessageAuthenticator, Duration, Distance; 
  }; 

  type record of record {
    EfcDsrcApplication.Provider tollContext,
    INT1 contextVersion
  } ActiveContexts; 

  type EfcDsrcApplication.EFC_ContextMark CCC_ContextMark; 

  type record CommunicationStatus {
    EfcDsrcGeneric.Time timeOfLastTransmission,
    EfcDsrcGeneric.Time pendingSince
  }

  type record DistanceRecordingStatus {
    DistRecordingStatus distRecordingStatus,
    INT4 accumulatedTravelledDistance,
    INT1Signed deviationFromGnss
  }

  type record GnssStatus {
    Longitude lastGnssFixLon,
    Latitude lastGnssFixLat,
    Altitude lastGnssFixAlt,
    EfcDsrcGeneric.Time lastGnssFixTime,
    CurrentHDOP currentHDOP,
    LastLAC lastLAC
  }

  type record OBEStatusHistory {
    StatusIndicator statusIndicator,
    EfcDsrcGeneric.Time timeWhenChanged,
    EfcDsrcGeneric.Time timeWhenActived,
    EfcDsrcGeneric.Time timeWhenObePowered
  }

  type record ExtendedOBEStatusHistory {
    StatusIndicator statusIndicator,
    EfcDsrcGeneric.Time timeWhenChanged,
    StatusIndicator previousStatusIndicator,
    EfcDsrcGeneric.Time timeWhenChangedToPrevious,
    EfcDsrcGeneric.Time timeWhenActived,
    EfcDsrcGeneric.Time timeWhenObePowered
  }

  type record VehicleAxlesHistory {
    EfcDsrcGeneric.Time timeWhenChanged,
    EfcDsrcApplication.VehicleAxles previousVehicleAxles
  }

  type record ExtendedVehicleAxlesHistory {
    EfcDsrcGeneric.Time timeWhenChanged,
    EfcDsrcApplication.VehicleAxles previousVehicleAxles,
    EfcDsrcGeneric.Time timeWhenChangedToPrevious
  }

  type record VehicleWeightHistory {
    EfcDsrcGeneric.Time timeWhenChangedToCurrentValue,
    EfcDsrcApplication.VehicleCurrentMaxTrainWeight previousVehicleWeight,
    Int2 previousLocalVehicleClassID,
    EfcDsrcGeneric.Time timeWhenChangedToPrevious
  }

  type integer Int2 (0 .. 65535); 

  type integer StatusIndicator (0 .. 255); 

  const integer StatusIndicator_noGo_ := 0; 

  const integer StatusIndicator_go_ := 1; 

  const integer StatusIndicator_noGoContractual_ := 2; 

  const integer StatusIndicator_noGoUserSwitchedOff_ := 3; 

  type EfcDsrcApplication.LPN VehicleLicensePlateNumber; 

  type INT1 AttributeUpdateInterval; 

  type record CurrentHDOP {
    INT1 hDOP,
    INT1 numberOfUsedSatellites
  }

  type integer INT1 (0 .. 255); 

  type integer INT1Signed (-128 .. 127); 

  type integer INT2 (0 .. 65535); 

  type integer INT2Signed (-32768 .. 32767); 

  type integer INT4 (0 .. 4294967295); 

  type integer INT4Signed (-2147483648 .. 2147483647); 

  type record LastLAC {
    EfcDsrcGeneric.Time timeOfLAC,
    EfcDsrcApplication.Provider lACOperator,
    INT2 rSEId
  }

  type INT4Signed Latitude; 

  type INT4Signed Longitude; 

  type INT2Signed Altitude; 

  type integer DistRecordingStatus (0 .. 255); 

  const integer DistRecordingStatus_notPresent_ := 1; 

  const integer DistRecordingStatus_presentAndActive_ := 2; 

  const integer DistRecordingStatus_presentAndInactive_ := 3; 

  const integer DistRecordingStatus_reservedForFutureUse_ := 4; 

  type record ApplicationContextMark {
    CCC_ContextMark cccContextMark,
    octetstring ac_cr_reference length (2),
    octetstring rndOBE length (4)
  }

}
