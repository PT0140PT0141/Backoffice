/*
 * ----------------------------------------------------------------------------
 *  This file is automatically generated using TTworkbench Language Support ASN.1 Parser
 *  PLEASE DO NOT EDIT! The file will be overwritten when the input file changes.
 *
 *  Source:    EfcLac.asn
 *  Generator: TTworkbench ASN.1 Parser 1.1.14.201606151123
 *  Date:      7/6/17 11:38 AM
 *
 * ----------------------------------------------------------------------------
 *  The ASN.1 to TTCN-3 is a proprietary mapping based on the ES 201 873-7 ETSI standard.
 *  Details about the used mapping can be found in the TTworkbench documentation.
 *
 *  TTworkbench is a product of Testing Technologies.
 *  http://www.testingtech.com
 *
 *  TESTING TECHNOLOGIES DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
 *  SOFTWARE. IN NO EVENT SHALL TESTING TECHNOLOGIES BE LIABLE FOR ANY
 *  SPECIAL, DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 *  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 *  AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
 *  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
 *  THIS SOFTWARE.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 *  EITHER EXPRESSED OR IMPLIED, INCLUDING ANY KIND OF IMPLIED OR
 *  EXPRESSED WARRANTY OF NON-INFRINGEMENT OR THE IMPLIED WARRANTIES
 *  OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 *  (C) Copyright Testing Technologies, 2000-2017. All Rights Reserved.
 * ----------------------------------------------------------------------------
 */

module EfcLac language "ASN.1:1997" {
  import from ASNAUX all; 

  import from EfcDsrcApplication language "ASN.1:1997" all; 

  import from AVIAEINumberingAndDataStructures language "ASN.1:1997" all; 

  import from EfcDsrcGeneric language "ASN.1:1997" all; 

  import from EfcCcc language "ASN.1:1997" all; 

  import from EfcAutonomousContextData language "ASN.1:1997" all; 

  import from EfcAutonomousCharging language "ASN.1:1997" all; 

  type EfcDsrcApplication.EFC_ContextMark LAC_ContextMark; 

  type record LACData {
    EfcDsrcApplication.Provider lacOperator,
    INT2 rseId,
    EfcCcc.Latitude latitude,
    EfcCcc.Longitude longitude,
    EfcCcc.Altitude altitude,
    TollCharger tollCharger,
    ChargeObjectId chargeObject,
    INT2Signed distanceToObject,
    EfcDsrcGeneric.Time lacTime,
    MAC_TC macTc,
    octetstring mac2 length (8)
  }

  type record ChargeObjectId {
    INT2 regimeId,
    INT4 chargeObjectDesignation
  }

  type record TollCharger {
    EfcDsrcApplication.Provider tollContext,
    EfcDsrcApplication.Provider chargeReportFinalRecipient
  }

  type record MAC_TC {
    INT1 keyRef,
    MAC_TC_Algorithm algorithmId,
    octetstring mac length (4),
    octetstring nonce length (2)
  }

  type integer MAC_TC_Algorithm (0 .. 255); 

  const integer MAC_TC_Algorithm_cbcDes64bitKey_ := 0; 

  const integer MAC_TC_Algorithm_cmacAes128bitKey_ := 1; 

  type integer INT1 (0 .. 255); 

  type integer INT2 (0 .. 65535); 

  type integer INT4 (0 .. 4294967295); 

  type integer INT2Signed (-32768 .. 32767); 

  type record ApplicationContextMark {
    LAC_ContextMark lacContextMark,
    octetstring ac_cr_reference length (2),
    octetstring rndOBE length (4)
  }

}
