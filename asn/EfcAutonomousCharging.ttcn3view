/*
 * ----------------------------------------------------------------------------
 *  This file is automatically generated using TTworkbench Language Support ASN.1 Parser
 *  PLEASE DO NOT EDIT! The file will be overwritten when the input file changes.
 *
 *  Source:    EfcAutonomousCharging.asn
 *  Generator: TTworkbench ASN.1 Parser 2.25.0.201711292344
 *  Date:      5/16/18 4:43 PM
 *
 * ----------------------------------------------------------------------------
 *  The ASN.1 to TTCN-3 is a proprietary mapping based on the ES 201 873-7 ETSI standard.
 *  Details about the used mapping can be found in the TTworkbench documentation.
 *
 *  TTworkbench is a product of Spirent Communications.
 *  https://www.spirent.com/TTworkbench
 *
 *  SPIRENT COMMUNICATIONS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
 *  SOFTWARE. IN NO EVENT SHALL SPIRENT COMMUNICATIONS BE LIABLE FOR ANY
 *  SPECIAL, DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 *  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 *  AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
 *  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
 *  THIS SOFTWARE.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 *  EITHER EXPRESSED OR IMPLIED, INCLUDING ANY KIND OF IMPLIED OR
 *  EXPRESSED WARRANTY OF NON-INFRINGEMENT OR THE IMPLIED WARRANTIES
 *  OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 *  (C) Copyright Spirent Communications, 2000-2018. All Rights Reserved.
 * ----------------------------------------------------------------------------
 */

module EfcAutonomousCharging language "ASN.1:1997" {
  import from ASNAUX all; 

  import from EfcDsrcApplication language "ASN.1:1997" all; 

  import from AVIAEINumberingAndDataStructures language "ASN.1:1997" all; 

  import from EfcDsrcGeneric language "ASN.1:1997" all; 

  import from EfcCcc language "ASN.1:1997" all; 

  import from EfcAutonomousContextData language "ASN.1:1997" all; 

  type record AuthenticatedChargeReport {
    bitstring chargeReportPer,
    MessageAuthenticator messageAuthenticator
  }

  type record AuthenticatedChargeReportResponse {
    bitstring chargeReportResponsePer,
    MessageAuthenticator messageAuthenticator
  }

  type record ChargeReportResponse {
    EfcDsrcApplication.Provider chargeReportRespSender optional,
    DataReceived dataReceived optional,
    VersionId versionsResponse optional,
    EfcDsrcApplication.SetMMIRq obeStatusForDriver optional,
    AccountUpdate accountUpdate optional
  }

  type integer AccountStatus (0 .. 255); 

  const integer AccountStatus_ok_ := 0; 

  const integer AccountStatus_low_ := 1; 

  const integer AccountStatus_empty_ := 2; 

  const integer AccountStatus_negative_ := 3; 

  type union AccountUpdate {
    ReloadAccount reloadAccount,
    NewAccountLimit setAccount,
    AddToAccount addToAccount,
    AuthenticatedReloadAccount authenticatedReloadAccount,
    AuthenticatedNewAccountLimit authenticatedSetAccount,
    AuthenticatedAddToAccount authenticatedAddToAccount
  }

  type record AddToAccount {
    EfcDsrcApplication.PaymentFee addCredit optional,
    Distance addDistance optional,
    ASNAUX.GeneralizedTime addTime optional,
    Duration addDuration optional,
    integer addEvents optional
  }

  type record AggregatedFee {
    Period timePeriodCovered,
    EfcDsrcApplication.PaymentFee feeExclVat,
    EfcDsrcApplication.PaymentFee sumVat optional
  }

  type record AggregatedSingleTariffClassSession {
    Period timePeriodCovered optional,
    TariffClassDescription currentTariffClass optional,
    boolean vehicleDescription optional,
    Distance totalDistanceCovered optional,
    integer numberOfDetectedEvents optional,
    EfcDsrcApplication.SetMMIRq obeStatus optional,
    EfcDsrcApplication.PaymentFee feeExclVat optional,
    EfcDsrcApplication.PaymentFee sumVat optional
  }

  type integer AidIdentifier (0 .. 255); 

  const integer AidIdentifier_iso17575_1_2016_ := 0; 

  type record Altitude {
    integer altitude (-65536 .. 65535),
    DisUnit altUnit optional
  }

  type record AuthenticatedAddToAccount {
    bitstring addAccountPer,
    MessageAuthenticator messageAuthenticator
  }

  type record AuthenticatedNewAccountLimit {
    bitstring newAccountPer,
    MessageAuthenticator messageAuthenticator
  }

  type record AuthenticatedReloadAccount {
    bitstring reloadAccountPer,
    MessageAuthenticator messageAuthenticator
  }

  type record AuthenticatedUsageStatement {
    bitstring usageStatementPer,
    MessageAuthenticator messageAuthenticator
  }

  type record CccAttributes {
    ASNAUX.GeneralizedTime timeOfCccRecord optional,
    EfcCcc.VehicleAxlesHistory axlesHistory optional,
    EfcCcc.CommunicationStatus commStatus optional,
    EfcCcc.GnssStatus gnssStatus optional,
    EfcCcc.DistanceRecordingStatus distRecStatus optional,
    EfcCcc.ActiveContexts activeContexts optional,
    EfcCcc.OBEStatusHistory obeHistory optional
  }

  type record ChargeObjectId {
    EfcDsrcApplication.Provider chargeReportFinalRecipient optional,
    EfcDsrcApplication.Int4 chargeObjectDesignation
  }

  type union DataReceived {
    ASNAUX.GeneralizedTime timeOfReport,
    Distance mileage,
    EfcDsrcApplication.Int4 chargeReportCounter
  }

  type record DetectedChargeObject {
    ChargeObjectId chargeObjectId,
    EfcDsrcApplication.Int4 subObjectNumber optional,
    ASNAUX.GeneralizedTime timeWhenUsed optional,
    Distance mileageWhenUsed optional,
    TariffClassDescription currentTariffClass optional,
    boolean vehicleDescription optional,
    EfcDsrcApplication.SetMMIRq obeStatus optional,
    EfcDsrcApplication.PaymentFee feeExclVat optional,
    EfcDsrcApplication.PaymentFee sumVat optional,
    DetectionMode chargeObjDetectionMode optional
  }

  type integer DetectionMode (0 .. 255); 

  const integer DetectionMode_measured_ := 0; 

  const integer DetectionMode_inferred_ := 1; 

  const integer DetectionMode_lac_ := 2; 

  type record Distance {
    EfcDsrcApplication.Int4 dist,
    DisUnit disUnit optional
  }

  type integer DisUnit (0 .. 255); 

  const integer DisUnit_kilometres_ := 0; 

  const integer DisUnit_miles_ := 1; 

  const integer DisUnit_metres_ := 2; 

  const integer DisUnit_yards_ := 3; 

  const integer DisUnit_feet_ := 4; 

  const integer DisUnit_decimetres_ := 5; 

  const integer DisUnit_quartermetres_ := 6; 

  type record Duration {
    EfcDsrcApplication.Int4 dur,
    DurUnit durUnit optional
  }

  type integer DurUnit (0 .. 255); 

  const integer DurUnit_seconds_ := 0; 

  const integer DurUnit_minutes_ := 1; 

  const integer DurUnit_hours_ := 2; 

  const integer DurUnit_days_ := 3; 

  const integer DurUnit_months_ := 4; 

  type record ListOfRawUsageData {
    record of MeasuredRawData rawDataList,
    TariffClassDescription currentTariffClass optional,
    boolean vehicleDescription optional
  }

  type record MacMessageAuthenticator {
    integer masterKeyRef,
    octetstring keyDerivationID,
    bitstring authenticator
  }

  type record MeasuredRawData {
    Position measuredPosition optional,
    ASNAUX.GeneralizedTime timeWhenMeasured optional,
    NmeaData nmeaData optional,
    octetstring additionalGnssData optional
  }

  type union MessageAuthenticator {
    MacMessageAuthenticator mac,
    MessageAuthenticatorEfc signature_
  }

  type record MessageAuthenticatorEfc {
    TbsMessageAuthenticatorEfc tbsMessageAuthenticatorEfc,
    bitstring signatureValue
  }

  type record MessageContentDigest {
    octetstring hashedMessageContent
  }

  type record NewAccountLimit {
    EfcDsrcApplication.PaymentFee newCreditLimit optional,
    Distance newDistanceLimit optional,
    ASNAUX.GeneralizedTime newTimeLimit optional,
    Duration newDurationLimit optional,
    integer newEventLimit optional
  }

  type record NmeaData {
    ASNAUX.NumericString time length (9) optional,
    ASNAUX.PrintableString status (
      "A", 
      "V"
    ) optional,
    ASNAUX.NumericString latitude length (8) optional,
    ASNAUX.PrintableString latNS (
      "N", 
      "S"
    ) optional,
    ASNAUX.NumericString longitude length (9) optional,
    ASNAUX.PrintableString longEW (
      "E", 
      "W"
    ) optional,
    ASNAUX.NumericString speed length (3) optional,
    ASNAUX.NumericString heading length (3) optional,
    ASNAUX.NumericString date length (6) optional,
    ASNAUX.PrintableString signalIntegrity (
      "A", 
      "D", 
      "E", 
      "M", 
      "S", 
      "N"
    ) optional,
    ASNAUX.PrintableString altitude length (5) optional,
    ASNAUX.NumericString usedSatellites length (2) optional,
    ASNAUX.NumericString hdop length (3) optional
  }

  type record ObeId {
    EfcDsrcApplication.Int2 manufacturerId,
    EfcDsrcApplication.EquipmentOBUId equipmentObuId
  }

  type record Period {
    ASNAUX.GeneralizedTime beginOfPeriod,
    ASNAUX.GeneralizedTime endOfPeriod
  }

  type record Position {
    integer longitude (-2147483648 .. 2147483647),
    integer latitude (-2147483648 .. 2147483647),
    Altitude altitude optional
  }

  type record ReloadAccount {
    boolean reloadOldCreditAmount optional,
    boolean reloadOldDistanceLimit optional,
    boolean reloadOldTimeLimit optional,
    boolean reloadOldDurationLimit optional,
    boolean reloadOldEventLimit optional
  }

  type record TariffClassDescription {
    EfcAutonomousContextData.TariffClassId tariffClassId optional,
    EfcAutonomousContextData.LocalVehicleClassId localVehicleClass optional,
    EfcAutonomousContextData.TimeClassId timeClass optional,
    EfcAutonomousContextData.LocationClassId locationClass optional,
    EfcAutonomousContextData.UserClassId userClass optional
  }

  type record TbsMessageAuthenticatorEfc {
    integer version optional,
    MessageContentDigest messageContentDigest,
    ASNAUX.GeneralizedTime signatureDate
  }

  type record ListOfDsrcUsageDataVehicleDescription {
    EfcDsrcApplication.VehicleLicencePlateNumber vehicleLPNr optional,
    EfcDsrcApplication.VehicleAxles axles optional,
    EfcDsrcApplication.VehicleClass class optional,
    EfcDsrcApplication.VehicleDimensions dimensions optional,
    EfcDsrcApplication.VehicleSpecificCharacteristics specificCharacteristics optional,
    EfcDsrcApplication.VehicleWeightLaden ladenWeight optional,
    EfcDsrcApplication.VehicleWeightLimits weightLimits optional,
    EfcDsrcApplication.TrailerCharacteristics trailerCharacteristics optional
  }

  type union VersionId {
    octetstring basicVersionId,
    record of record {
      ASNAUX.UTF8String versionName,
      ASNAUX.UTF8String value_
    } extendedVersionId
  }

}
