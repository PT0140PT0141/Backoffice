/*
 * ----------------------------------------------------------------------------
 *  This file is automatically generated using TTworkbench Language Support ASN.1 Parser
 *  PLEASE DO NOT EDIT! The file will be overwritten when the input file changes.
 *
 *  Source:    EfcAutonomousCharging.asn
 *  Generator: TTworkbench ASN.1 Parser 1.1.13.201605251730
 *  Date:      07/06/16 07:50
 *
 * ----------------------------------------------------------------------------
 *  The ASN.1 to TTCN-3 is a proprietary mapping based on the ES 201 873-7 ETSI standard.
 *  Details about the used mapping can be found in the TTworkbench documentation.
 *
 *  TTworkbench is a product of Testing Technologies.
 *  http://www.testingtech.com
 *
 *  TESTING TECHNOLOGIES DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS
 *  SOFTWARE. IN NO EVENT SHALL TESTING TECHNOLOGIES BE LIABLE FOR ANY
 *  SPECIAL, DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 *  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 *  AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
 *  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF
 *  THIS SOFTWARE.
 *
 *  THE SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
 *  EITHER EXPRESSED OR IMPLIED, INCLUDING ANY KIND OF IMPLIED OR
 *  EXPRESSED WARRANTY OF NON-INFRINGEMENT OR THE IMPLIED WARRANTIES
 *  OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.
 *
 *  (C) Copyright Testing Technologies, 2000-2016. All Rights Reserved.
 * ----------------------------------------------------------------------------
 */

module EfcAutonomousCharging language "ASN.1:1997" {
  import from ASNAUX all; 

  import from EfcDsrcApplication language "ASN.1:1997" all; 

  import from AVIAEINumberingAndDataStructures language "ASN.1:1997" all; 

  import from EfcDsrcGeneric language "ASN.1:1997" all; 

  import from EfcCcc language "ASN.1:1997" all; 

  import from EfcAutonomousContextData language "ASN.1:1997" all; 

  type record AuthenticatedChargeReport {
    bitstring chargeReportPer,
    MessageAuthenticator messageAuthenticator
  }

  type record AuthenticatedChargeReportResponse {
    bitstring chargeReportResponsePer,
    MessageAuthenticator messageAuthenticator
  }

  type record ChargeReportResponse {
    EfcDsrcApplication.Provider chargeReportRespSender optional,
    DataReceived dataReceived optional,
    VersionId versionsResponse optional,
    EfcDsrcApplication.SetMMIRq obeStatusForDriver optional,
    AccountUpdate accountUpdate optional
  }

  type integer AccountStatus (0 .. 255); 

  const AccountStatus AccountStatus_empty_ := 2; 

  const AccountStatus AccountStatus_ok_ := 0; 

  const AccountStatus AccountStatus_negative_ := 3; 

  const AccountStatus AccountStatus_low_ := 1; 

  type union AccountUpdate {
    ReloadAccount reloadAccount,
    NewAccountLimit setAccount,
    AddToAccount addToAccount,
    AuthenticatedReloadAccount authenticatedReloadAccount,
    AuthenticatedNewAccountLimit authenticatedSetAccount,
    AuthenticatedAddToAccount authenticatedAddToAccount
  }

  type record AddToAccount {
    EfcDsrcApplication.PaymentFee addCredit optional,
    Distance addDistance optional,
    ASNAUX.GeneralizedTime addTime optional,
    Duration addDuration optional,
    integer addEvents optional
  }

  type record AggregatedFee {
    Period timePeriodCovered,
    EfcDsrcApplication.PaymentFee feeExclVat,
    EfcDsrcApplication.PaymentFee sumVat optional
  }

  type record AggregatedSingleTariffClassSession {
    Period timePeriodCovered optional,
    TariffClassDescription currentTariffClass optional,
    boolean vehicleDescription optional,
    Distance totalDistanceCovered optional,
    integer numberOfDetectedEvents optional,
    EfcDsrcApplication.SetMMIRq obeStatus optional,
    EfcDsrcApplication.PaymentFee feeExclVat optional,
    EfcDsrcApplication.PaymentFee sumVat optional
  }

  type integer AidIdentifier (0 .. 255); 

  const AidIdentifier AidIdentifier_iso17575_1_2016_ := 0; 

  type record Altitude {
    _0Altitude altitude,
    DisUnit altUnit optional
  }

  type integer _0Altitude (-65536 .. 65535); 

  type record AuthenticatedAddToAccount {
    bitstring addAccountPer,
    MessageAuthenticator messageAuthenticator
  }

  type record AuthenticatedNewAccountLimit {
    bitstring newAccountPer,
    MessageAuthenticator messageAuthenticator
  }

  type record AuthenticatedReloadAccount {
    bitstring reloadAccountPer,
    MessageAuthenticator messageAuthenticator
  }

  type record AuthenticatedUsageStatement {
    bitstring usageStatementPer,
    MessageAuthenticator messageAuthenticator
  }

  type record CccAttributes {
    ASNAUX.GeneralizedTime timeOfCccRecord optional,
    EfcCcc.VehicleAxlesHistory axlesHistory optional,
    EfcCcc.CommunicationStatus commStatus optional,
    EfcCcc.GnssStatus gnssStatus optional,
    EfcCcc.DistanceRecordingStatus distRecStatus optional,
    EfcCcc.ActiveContexts activeContexts optional,
    EfcCcc.OBEStatusHistory obeHistory optional
  }

  type record ChargeObjectId {
    EfcDsrcApplication.Provider chargeReportFinalRecipient optional,
    EfcDsrcApplication.Int4 chargeObjectDesignation
  }

  type union DataReceived {
    ASNAUX.GeneralizedTime timeOfReport,
    Distance mileage,
    EfcDsrcApplication.Int4 chargeReportCounter
  }

  type record DetectedChargeObject {
    ChargeObjectId chargeObjectId,
    EfcDsrcApplication.Int4 subObjectNumber optional,
    ASNAUX.GeneralizedTime timeWhenUsed optional,
    Distance mileageWhenUsed optional,
    TariffClassDescription currentTariffClass optional,
    boolean vehicleDescription optional,
    EfcDsrcApplication.SetMMIRq obeStatus optional,
    EfcDsrcApplication.PaymentFee feeExclVat optional,
    EfcDsrcApplication.PaymentFee sumVat optional,
    DetectionMode chargeObjDetectionMode optional
  }

  type integer DetectionMode (0 .. 255); 

  const DetectionMode DetectionMode_inferred_ := 1; 

  const DetectionMode DetectionMode_measured_ := 0; 

  const DetectionMode DetectionMode_lac_ := 2; 

  type record Distance {
    EfcDsrcApplication.Int4 dist,
    DisUnit disUnit optional
  }

  type integer DisUnit (0 .. 255); 

  const DisUnit DisUnit_yards_ := 3; 

  const DisUnit DisUnit_quartermetres_ := 6; 

  const DisUnit DisUnit_kilometres_ := 0; 

  const DisUnit DisUnit_miles_ := 1; 

  const DisUnit DisUnit_metres_ := 2; 

  const DisUnit DisUnit_feet_ := 4; 

  const DisUnit DisUnit_decimetres_ := 5; 

  type record Duration {
    EfcDsrcApplication.Int4 dur,
    DurUnit durUnit optional
  }

  type integer DurUnit (0 .. 255); 

  const DurUnit DurUnit_hours_ := 2; 

  const DurUnit DurUnit_days_ := 3; 

  const DurUnit DurUnit_months_ := 4; 

  const DurUnit DurUnit_seconds_ := 0; 

  const DurUnit DurUnit_minutes_ := 1; 

  type record ListOfRawUsageData {
    _0ListOfRawUsageData rawDataList,
    TariffClassDescription currentTariffClass optional,
    boolean vehicleDescription optional
  }

  type record of MeasuredRawData _0ListOfRawUsageData; 

  type record MacMessageAuthenticator {
    integer masterKeyRef,
    octetstring keyDerivationID,
    bitstring authenticator
  }

  type record MeasuredRawData {
    Position measuredPosition optional,
    ASNAUX.GeneralizedTime timeWhenMeasured optional,
    NmeaData nmeaData optional,
    octetstring additionalGnssData optional
  }

  type union MessageAuthenticator {
    MacMessageAuthenticator mac,
    MessageAuthenticatorEfc signature_
  }

  type record MessageAuthenticatorEfc {
    TbsMessageAuthenticatorEfc tbsMessageAuthenticatorEfc,
    bitstring signatureValue
  }

  type record MessageContentDigest {
    octetstring hashedMessageContent
  }

  type record NewAccountLimit {
    EfcDsrcApplication.PaymentFee newCreditLimit optional,
    Distance newDistanceLimit optional,
    ASNAUX.GeneralizedTime newTimeLimit optional,
    Duration newDurationLimit optional,
    integer newEventLimit optional
  }

  type record NmeaData {
    _0NmeaData time optional,
    _0NmeaData0 status optional,
    _0NmeaData1 latitude optional,
    _0NmeaData2 latNS optional,
    _0NmeaData3 longitude optional,
    _0NmeaData4 longEW optional,
    _0NmeaData5 speed optional,
    _0NmeaData6 heading optional,
    _0NmeaData7 date optional,
    _0NmeaData8 signalIntegrity optional,
    _0NmeaData9 altitude optional,
    _0NmeaData10 usedSatellites optional,
    _0NmeaData11 hdop optional
  }

  type ASNAUX.NumericString _0NmeaData7 length (6); 

  type ASNAUX.NumericString _0NmeaData6 length (3); 

  type ASNAUX.PrintableString _0NmeaData9 length (5); 

  type ASNAUX.PrintableString _0NmeaData8 (
    "A", 
    "D", 
    "E", 
    "M", 
    "S", 
    "N"
  ); 

  type ASNAUX.NumericString _0NmeaData11 length (3); 

  type ASNAUX.NumericString _0NmeaData10 length (2); 

  type ASNAUX.NumericString _0NmeaData3 length (9); 

  type ASNAUX.PrintableString _0NmeaData2 (
    "N", 
    "S"
  ); 

  type ASNAUX.NumericString _0NmeaData5 length (3); 

  type ASNAUX.PrintableString _0NmeaData4 (
    "E", 
    "W"
  ); 

  type ASNAUX.NumericString _0NmeaData1 length (8); 

  type ASNAUX.NumericString _0NmeaData length (9); 

  type ASNAUX.PrintableString _0NmeaData0 (
    "A", 
    "V"
  ); 

  type record ObeId {
    EfcDsrcApplication.Int2 manufacturerId,
    EfcDsrcApplication.EquipmentOBUId equipmentObuId
  }

  type record Period {
    ASNAUX.GeneralizedTime beginOfPeriod,
    ASNAUX.GeneralizedTime endOfPeriod
  }

  type record Position {
    _0Position longitude,
    _0Position0 latitude,
    Altitude altitude optional
  }

  type integer _0Position0 (-2147483648 .. 2147483647); 

  type integer _0Position (-2147483648 .. 2147483647); 

  type record ReloadAccount {
    boolean reloadOldCreditAmount optional,
    boolean reloadOldDistanceLimit optional,
    boolean reloadOldTimeLimit optional,
    boolean reloadOldDurationLimit optional,
    boolean reloadOldEventLimit optional
  }

  type record TariffClassDescription {
    EfcAutonomousContextData.TariffClassId tariffClassId optional,
    EfcAutonomousContextData.LocalVehicleClassId localVehicleClass optional,
    EfcAutonomousContextData.TimeClassId timeClass optional,
    EfcAutonomousContextData.LocationClassId locationClass optional,
    EfcAutonomousContextData.UserClassId userClass optional
  }

  type record TbsMessageAuthenticatorEfc {
    integer version optional,
    MessageContentDigest messageContentDigest,
    ASNAUX.GeneralizedTime signatureDate
  }

  type record ListOfDsrcUsageDataVehicleDescription {
    EfcDsrcApplication.VehicleLicencePlateNumber vehicleLPNr optional,
    EfcDsrcApplication.VehicleAxles axles optional,
    EfcDsrcApplication.VehicleClass class optional,
    EfcDsrcApplication.VehicleDimensions dimensions optional,
    EfcDsrcApplication.VehicleSpecificCharacteristics specificCharacteristics optional,
    EfcDsrcApplication.VehicleWeightLaden ladenWeight optional,
    EfcDsrcApplication.VehicleWeightLimits weightLimits optional,
    EfcDsrcApplication.TrailerCharacteristics trailerCharacteristics optional
  }

  type union VersionId {
    octetstring basicVersionId,
    _0VersionId extendedVersionId
  }

  type record of _0_0VersionId _0VersionId; 

  type record _0_0VersionId {
    ASNAUX.UTF8String versionName,
    ASNAUX.UTF8String value_
  }

}
