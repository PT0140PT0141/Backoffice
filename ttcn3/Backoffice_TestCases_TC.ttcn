    
    /**
 * @author  PT0140 
 * @desc    This module provides test cases based on Charging TPs
 * @see     [16407-1:2016]: Test suite structure and test purpose
 * @see     [16407-1:2016], Clause 5.3.2 TP namimg conventions
 * @version $id$
 */
module Backoffice_TestCases_TC {
 /**
     * @desc    [17575-1:2016]: Charging
     * @see     Annex A (normative) EFC data type specifications
     */
    import from EfcAutonomousCharging language "ASN.1:1997" all;
    import from EfcDsrcApplication language "ASN.1:1997" all;
    import from EfcInfoExchange language "ASN.1:1997" all;
    
  
    // Backoffice
    import from Backoffice_Functions all;
    import from Backoffice_Templates all;
    import from Backoffice_Pics all;
    import from Backoffice_Interfaces all;
    
/**
      * @desc    These Test Cases apply to Toll Charger claiming conformance to [16986:2016] and applying Test Purposes as from TS xxxxx:2018 Annex A
      * @remark  nn TCs
      */
    group Base {
    	/**
          * @desc    Test subgroup objective:
          * - to test IUT with respect to the correctness of base and general functionalities that are required in many or all transaction types;
          */
        group Valid_Behaviour {
             /**
              * @desc    TP_TC_Base_BV_01: Verify that a TC validates correct infoExchanceAuthenticators in received APDUs and generates correct infoExchangeAuthenticators 
              * @remark  [16986:2016], Clause 6.2.2 and Table A.1/1 
              */
        	testcase Testcase_TP_TC_Base_BV_01() runs on IutComp system TestAdapter {
                
                // Local variables
                // for example:
                // var MyAsn1Type v_myAsn1Instance;
            	timer t_tseq
                
                // Repetitions
                // insert loop statement in case multiple APDUs are sent according to TP
                //for (…) {…}
                                    
                  
                // Preamble - Initial conditions 
                // No intial conditions according to TP
                        
                // Test body start
                  
                  
              
 //                 alt {

                      // Transaction sequence # 1
/*    
                      t_tseq.start(USERDETAILS_TIME1_MAX_TSP)
    
                      // Do all the operations in this step
    
					  f_checkMinimumTime(t_tseq, USERDETAILS_TIME1_MIN_TSP) 	                      
    
                      // Transaction sequence # 2
                      
                      t_tseq.start(USERDETAILS_TIME2_MAX_TSP)
                     
                      // Do all the operations in this step
                     
                      f_checkMinimumTime(t_tseq, USERDETAILS_TIME2_MIN_TSP) 	                      
                      
                      // Transaction sequence # 3
                      
                      t_tseq.start(USERDETAILS_TIME3_MAX_TSP) 
                      
                      // Do all the operations in this step
                      
                      f_checkMinimumTime(t_tseq, USERDETAILS_TIME3_MIN_TSP) 	                      
                                            
                      any timer.timeout
 */                 
                //}
			    
            } 
        } // End of group Valid_Behaviour
            
        /**
         * @desc    Invalid behaviour Test cases
         * @remark  0 TCs
         */
         
        group Invalid_Behaviour {		
        } // End of group Invalid_Behaviour
        
    } // End of group Base
    
    group USERDETAILS {
        group Valid_Behaviour {
 		} // End of group Valid_Behaviour
         
        group Invalid_Behaviour {		
        } // End of group Invalid_Behaviour
        
    } // End of group USERDETAILS
    group LISTOFUSERS {
    
          group Valid_Behaviour {
 		} // End of group Valid_Behaviour
         
         group Invalid_Behaviour {		
        } // End of group Invalid_Behaviour
 
    } // End of group LISTOFUSERS
    group EXCEPTIONLIST {
         group Valid_Behaviour {
 		} // End of group Valid_Behaviour
         
         group Invalid_Behaviour {		
        } // End of group Invalid_Behaviour

    } // End of group EXCEPTIONLIST
    group TRUSTOBJECTS {
         group Valid_Behaviour {
 		} // End of group Valid_Behaviour
         
         group Invalid_Behaviour {		
        } // End of group Invalid_Behaviour

    } // End of group TRUSTOBJECTS
    group PAYMENTCLAIM {
         group Valid_Behaviour {
 		} // End of group Valid_Behaviour
         
         group Invalid_Behaviour {		
        } // End of group Invalid_Behaviour

    } // End of group PAYMENTCLAIM
    group DSRC_CONTRACTISSUERLIST {
         group Valid_Behaviour {
 		} // End of group Valid_Behaviour
         
         group Invalid_Behaviour {		
        } // End of group Invalid_Behaviour

    } // End of group DSRC.CONTRACTISSUERLIST
    group DSRC_EFCCONTEXTDATA {
         group Valid_Behaviour {
 		} // End of group Valid_Behaviour
         
         group Invalid_Behaviour {		
        } // End of group Invalid_Behaviour

    } // End of group DSRC.EFCCONTEXTDATA
    group DSRC_BILLINGDETAILS {
         group Valid_Behaviour {
 		} // End of group Valid_Behaviour
         
         group Invalid_Behaviour {		
        } // End of group Invalid_Behaviour

    } // End of group DSRC.BILLINGDETAILS
    group DSRC_REPORTABNORMALOBE {
         group Valid_Behaviour {
 		} // End of group Valid_Behaviour
         
         group Invalid_Behaviour {		
        } // End of group Invalid_Behaviour

    } // End of group DSRC.REPORTABNORMALOBE
    group GNSS_TOLLDECLARATION {
         group Valid_Behaviour {
 		} // End of group Valid_Behaviour
         
         group Invalid_Behaviour {		
        } // End of group Invalid_Behaviour

    } // End of group GNSS.TOLLDECLARATION
    group GNSS_BILLINGDETAILS_TSP {
         group Valid_Behaviour {
 		} // End of group Valid_Behaviour
         
         group Invalid_Behaviour {		
        } // End of group Invalid_Behaviour

    } // End of group GNSS.BILLINGDETAILS.TSP
    group GNSS_BILLINGDETAILS_TC {
         group Valid_Behaviour {
 		} // End of group Valid_Behaviour
         
         group Invalid_Behaviour {		
        } // End of group Invalid_Behaviour

    } // End of group GNSS.BILLINGDETAILS.TC
    group GNSS_PAYMENTANNOUNCEMENT {
         group Valid_Behaviour {
 		} // End of group Valid_Behaviour
         
         group Invalid_Behaviour {		
        } // End of group Invalid_Behaviour

    } // End of group GNSS.PAYMENTANNOUNCEMENT
} // End of module Toll_Charger
