/*
 * @author     PT140
 * @version    $Id$
 * @desc        xxx
 */
module EfcInfoExchange_LibUpperTester {

	import from EfcInfoExchange_Interfaces {type MainTestComponent;};
	import from EfcInfoExchange_Functions all;


	type enumerated Iso16986Trigger {
		USERDETAILS_TR_TC_1,
		LISTOFUSERS_TR_TC_1_ONEORMOREADUS,
		LISTOFUSERS_TR_TC_1_ONEADU,
		LISTOFUSERS_TR_TC_1_THREEADUS,
		EXCEPTIONLIST_TR_TSP_1_BLACK,
		EXCEPTIONLIST_TR_TSP_1_WHITE,
		EXCEPTIONLIST_TR_TSP_1_DISCOUNT,
		TRUSTOBJECTS_TR_1,
		TRUSTOBJECTS_TR_2,
		PAYMENTCLAIM_TR_TC_1_SEND,
		PAYMENTCLAIM_TR_TC_1_REVOKE,
		PAYMENTCLAIM_TR_TC_1_ADJUST,
		DSRC_CONTRACTISSUERLIST_TR_TSP_1_DIFFMANUFID,
		DSRC_EFCCONTEXTDATA_TR_TC_1_DSRC_OPEN,
		DSRC_EFCCONTEXTDATA_TR_TC_1_DSRC_CLOSED,
		DSRC_BILLINGDETAILS_TR_TC_1_SEND,
		DSRC_BILLINGDETAILS_TR_TC_1_ADJUST,
		DSRC_BILLINGDETAILS_TR_TC_1_REVOKE,
		DSRC_REPORTABNORMALOBE_TR_TC_1,
		//GNSS_TOLLDECLARATION_TR_TSP_1, //We always need to specify which action code to use, therefore this trigger is not usable
		GNSS_TOLLDECLARATION_TR_TSP_1_SENDREVOKEADJUST,
		GNSS_TOLLDECLARATION_TR_TSP_1_SEND,
		GNSS_TOLLDECLARATION_TR_TSP_1_ADJUST,
		GNSS_TOLLDECLARATION_TR_TSP_1_SEND_SECTIONED,		//Used for setting up BILLINGDETAILS-tests
		GNSS_TOLLDECLARATION_TR_TSP_1_SEND_TRAVELLINGINAREA,//Used for setting up BILLINGDETAILS-tests
		GNSS_TOLLDECLARATION_TR_TSP_1_SEND_STAYINGINAREA,	//Used for setting up BILLINGDETAILS-tests
		GNSS_TOLLDECLARATION_TR_TSP_1_SEND_CORDONCROSSING,	//Used for setting up BILLINGDETAILS-tests
		GNSS_BILLINGDETAILS_TC_TR_TC_1_SEND,
		GNSS_BILLINGDETAILS_TC_TR_TC_1_ADJUST,
		GNSS_BILLINGDETAILS_TC_TR_TC_1_REVOKE,
		GNSS_BILLINGDETAILS_TSP_TR_TSP_1_SEND,
		GNSS_BILLINGDETAILS_TSP_TR_TSP_1_ADJUST,
		GNSS_BILLINGDETAILS_TSP_TR_TSP_1_REVOKE,
		GNSS_PAYMENTANNOUNCEMENT_TR_TSP_1_SEND,
		GNSS_PAYMENTANNOUNCEMENT_TR_TSP_1_ADJUST,
		GNSS_PAYMENTANNOUNCEMENT_TR_TSP_1_REVOKE
	};
	

    type record Iso16986TriggerRsp {
		enumerated {TRIGGERED, NOT_TRIGGERED} responseCode,
		charstring reason optional        
	}

	template Iso16986TriggerRsp mw_iso16986TriggerRspNotTriggered:={
	  responseCode:=NOT_TRIGGERED,
	  reason := *
	}
	
    altstep a_upperTester() runs on MainTestComponent{
    	var Iso16986TriggerRsp v_notTriggeredResponse;
    	   	
//		[] mtcAccessPort.receive(mw_iso16986TriggerRspNotTriggered) -> value v_notTriggeredResponse {
//			f_addLogEntry("IUT triggering action failed." & v_notTriggeredResponse.reason);
//        	setverdict(fail);
//	    }
		[] t_transaction.timeout {
			f_addLogEntry("IUT does not respond to initiating trigger");
            setverdict(inconc);
            stop;
		} // End of t_wait.timeout
    }

    
}