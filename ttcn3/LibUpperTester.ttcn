/*
 * @author     PT140
 * @version    $Id$
 * @desc        xxx
 */
module EfcInfoExchange_LibUpperTester {

	import from EfcInfoExchange_Interfaces {type MainTestComponent;};
	import from EfcInfoExchange_Functions {function f_addLogEntry;};

	type enumerated Iso16986Trigger {
		USERDETAILS_TR_TC_1, 
		LISTOFUSERS_TR_TC_1, 
		EXCEPTIONLIST_TR_TSP_1, 
		TRUSTOBJECTS_TR_1, 
		TRUSTOBJECTS_TR_2, 
		PAYMENTCLAIM_TR_TC_1,
		DSRC_CONTRACTISSUERLIST_TR_TSP_1,
		DSRC_EFCCONTEXTDATA_TR_TC_1,
		DSRC_BILLINGDETAILS_TR_TC_1,
		DSRC_REPORTABNORMALOBE_TR_TC_1,
		GNSS_TOLLDECLARATION_TR_TSP_1,
		GNSS_BILLINGDETAILS_TSP_TR_TSP_1,
		GNSS_BILLINGDETAILS_TC_TR_TC_1,
		GNSS_PAYMENTANNOUNCEMENT_TR_TSP_1		
	};

    type record Iso16986TriggerRsp {
		enumerated {TRIGGERED, NOT_TRIGGERED} responseCode,
		charstring reason optional        
	}

	template Iso16986TriggerRsp m_iso16986TriggerRspNotTriggered:={
	  responseCode:=NOT_TRIGGERED,
	  reason := *
	}
	
    altstep a_upperTester() runs on MainTestComponent{
		[] mtcAccessPort.receive(m_iso16986TriggerRspNotTriggered) {
			//PT140 TODO insert mechanism to read the potential "reason" message and put it in the log
        	f_addLogEntry("IUT triggering action failed");
        	setverdict(fail);
	    }
		[] t_transaction.timeout {
			f_addLogEntry("IUT does not respond to initiating trigger");
            setverdict(inconc);
            stop;
		} // End of t_wait.timeout
    }
    
}